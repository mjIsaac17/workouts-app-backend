{"version":3,"sources":["reportWebVitals.js","types/types.js","actions/snackbar.action.js","components/ui/Snackbar.js","helpers/fetch.js","types/adminData.js","actions/modal.action.js","actions/exercise.action.js","actions/muscles.action.js","actions/auth.action.js","components/login-register/LoginScreen.js","components/login-register/RegisterScreen.jsx","components/about/AboutScreen.jsx","components/ui/Modal.jsx","hooks/useForm.js","components/ui/InputFile.jsx","components/ui/MultipleSelect.jsx","components/exercises/AddExerciseForm.jsx","components/exercises/DetailsExercise.jsx","components/ui/Image.jsx","components/exercises/ExerciseItem.js","components/ui/ConfirmDelete.jsx","components/exercises/DetailsExerciseAdmin.jsx","helpers/componentsModal.js","components/exercises/WayToAddExercise.jsx","components/ui/DataTableSelect.jsx","components/ui/VerticalTabs.jsx","components/exercises/AddExistingExercise.jsx","helpers/excelProps.js","components/data-export/BtnExportToExcel.jsx","components/data-export/BtnExportExercisesToPDF.jsx","components/exercises/ExerciseList.js","components/muscles/AddMuscle.jsx","components/muscles/MuscleItem.js","components/muscles/MuscleDetails.jsx","components/muscles/MuscleList.js","actions/user.action.js","components/ui/FabAdd.jsx","components/users/AddUserForm.jsx","components/users/UserList.jsx","components/users/UserScreen.jsx","actions/workout.action.js","components/workouts/ExerciseCard.jsx","components/workouts/WorkoutExercisesList.jsx","components/ui/ChipArray.jsx","components/workouts/WorkoutAdd.jsx","components/workouts/WorkoutCard.jsx","components/workouts/WorkoutList.jsx","components/workouts/WorkoutScreen.jsx","routers/DashboardRoutes.js","routers/PrivateRoute.js","routers/PublicRoute.js","components/ui/Navbar.js","components/ui/SidebarData.js","components/ui/Sidebar.js","components/ui/Layout.jsx","routers/AppRouter.js","reducers/muscleReducer.js","reducers/exerciseReducer.js","reducers/userReducer.js","reducers/snackbarReducer.js","reducers/modalReducer.js","reducers/workoutReducer.js","reducers/authReducer.js","reducers/rootReducer.js","store.js","WorkoutsApp.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","types","setSnackbar","type","message","open","payload","CustomSnackbar","snackbar","useSelector","state","dispatch","useDispatch","handleClose","event","reason","Snackbar","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","Alert","severity","elevation","variant","baseUrl","process","fetchNoToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchToken","token","localStorage","getItem","fetchTokenFormData","formData","FormData","name","append","adminData","setModal","isOpen","header","componentName","successGetExercises","exercises","successGetExercisesToAddExistingExercise","failureAction","error","startGettingExercises","id","isNewExercise","a","resp","json","ok","console","log","successAddExercise","newExercise","setCurrentExercise","exercise","successUpdateExercise","successRemoveExercise","exerciseIdToRemove","muscleEndpoint","failureGetMuscles","startGettingMuscles","successAddMuscle","muscle","successUpdateMuscle","successRemoveMuscle","muscleId","setCurrentMuscle","successLogin","user","finishRenewToken","logout","clear","LoginScreen","useState","email","password","setBody","handleChange","e","target","value","className","Typography","color","style","display","onSubmit","userData","preventDefault","setItem","role_id","isAdmin","TextField","fullWidth","label","onChange","placeholder","InputProps","startAdornment","InputAdornment","position","Email","Lock","Button","size","to","RegisterScreen","errorsInitialState","lastname","errors","setErrors","Box","sx","flexDirection","alignItems","Avatar","m","bgcolor","component","noValidate","currentTarget","registerData","get","confirmPassword","formErrors","isValid","formValid","mt","Grid","container","spacing","item","xs","sm","required","helperText","autoFocus","mb","justifyContent","AboutScreen","marginY","List","ListItem","ListItemText","primary","href","rel","ListItemIcon","GitHub","LinkedIn","Modal","children","modalSize","modal","showHideClassName","useEffect","document","classList","add","remove","onClick","Close","useForm","initialState","values","setValues","handleInputChange","setSpecificValue","setForm","formValues","reset","InputFile","React","memo","currentImageName","onChangeFunction","newImageName","setNewImageName","htmlFor","Stack","direction","files","marginRight","InputLabel","MultipleSelect","items","defaultValues","selectedMuscles","setSelectedMuscles","split","Select","displayEmpty","multiple","input","OutlinedInput","renderValue","selected","length","flexWrap","gap","map","Chip","MenuItem","disabled","AddExerciseForm","muscleList","selectedMuscleName","handleModal","loading","setLoading","description","image","muscleNames","getElementsByName","getElementById","isFormValid","exerciseId","imageName","imageUrl","FormControl","margin","multiline","rows","LoadingButton","endIcon","loadingPosition","DetailsExercise","exerciseList","currentExercise","current","findIndex","currentIndex","setCurrentIndex","handleSetNewExercise","navigate","window","src","alt","height","muscleName","Image","defaultImageUrl","altText","setSrc","onError","ExerciseItem","ConfirmDelete","handleDelete","handleCancel","Delete","DetailsExerciseAdmin","deleteMode","setDeleteMode","newImage","parse","inputImageName","updateMuscles","getState","selectedMuscle","muscles","includes","componentsModal","WayToAddExercise","currentMuscle","handleClick","typeToAdd","columns","field","headerName","width","DataTableSelect","handleAdd","hoverExercise","setHoverExercise","divRef","useRef","ex","anchorEl","setAnchorEl","handlePopoverClose","Boolean","ref","undefined","pageSize","rowsPerPageOptions","disableSelectionOnClick","onCellClick","onCellEnter","row","onCellLeave","density","Popover","pointerEvents","transformOrigin","disableRestoreFocus","p","maxWidth","VerticalTabs","removeCurrentMuscle","setValue","Tabs","newValue","borderRight","borderColor","Tab","AddExistingExercise","selectedExercise","setSelectedExercise","muscleLoading","saving","setSaving","exerciseListToAddNew","find","textAlign","fullBorder","top","bottom","left","right","headerStyle","sz","bold","dataStyle","font","border","exerciseProps","title","wpx","alignment","wrapText","ExcelFile","ReactExport","ExcelSheet","BtnExportToExcel","dataSource","fileName","sheetName","excelFormat","dataSet","element","Tooltip","IconButton","FileDownload","filename","BtnExportExercisesToPDF","totalExercises","loadImage","Promise","resolve","img","onload","doc","jsPDF","all","images","forEach","i","setFont","setFontSize","text","ratio","addImage","at","addPage","save","catch","PictureAsPdf","ExerciseList","modalState","auth","filterWord","setFilterWord","setTotalExercises","countElements","total","search","RegExp","currentMuscleName","labelId","selectedMuscleId","index","replace","Search","Fab","theme","Add","AddMuscle","setError","trim","MuscleItem","editMode","onMuscleCardClick","MuscleDetails","deleteExercises","setDeleteExercises","setMuscleName","handleDeleteMode","startDeletingMuscle","FormLabel","RadioGroup","FormControlLabel","control","Radio","FormHelperText","MusclesList","setEditMode","fabEditStyle","handleMuscleClick","Edit","userSetCurrent","successDeleteUser","userId","FabAdd","onClickFunction","tooltipText","initialFormError","AddUserForm","roles","formError","setFormError","errorFlag","startUpdatingUser","startAddingUser","marginTop","defaultValue","userName","role","UserList","handleEdit","users","idx","secondary","Divider","UserScreen","currentUser","handleCloseModal","workoutEndpoint","successGetWorkoutExercises","startGettingWorkoutExercises","workoutName","setCurrentWorkout","workout","successAddWorkout","successUpdateWorkout","successRemoveWorkout","ExerciseCard","onCardClick","Card","CardActionArea","CardContent","gutterBottom","WorkoutExercisesList","useParams","currentWorkoutExercises","workouts","handleSelectExercise","componentModalName","styled","ChipsArray","chips","Paper","listStyle","onDelete","key","WorkoutAdd","action","currentWorkout","setChips","useMemo","handleAddChip","useCallback","Date","now","handleRemoveChip","chipToDelete","filter","chip","workoutDescription","exerciseIds","join","workoutId","startUpdatingWorkout","Input","WorkoutCard","textDecoration","CardActions","WorkoutList","myWorkouts","handleSelectWorkout","WorkoutsScreen","DashboardRoutes","history","useHistory","exact","path","goBack","ArrowBack","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","Navbar","openCloseSidebar","Menu","fontSize","padding","UserSidebarData","icon","Accessibility","link","FitnessCenter","Directions","Info","AdminSidebarData","SupervisedUserCircle","Sidebar","openSidebar","Drawer","onKeyDown","button","Layout","setOpenSidebar","AppRouter","checking","isLogged","uid","rootReducer","combineReducers","deletedMuscleId","updatedMuscle","updatedExercise","updatedUser","deletedId","updatedWorkout","w","deletedWorkoutId","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","createTheme","palette","main","contrastText","WorkoutsApp","ThemeProvider","CssBaseline","ReactDOM","render"],"mappings":"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","file":"static/js/main.890602de.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const types = {\r\n  failureAction: \"failureAction\",\r\n  setChecking: \"setChecking\",\r\n\r\n  //Muscles\r\n  clearMuscles: \"clearMuscle\",\r\n  failureGetMuscles: \"failureGetMuscles\",\r\n\r\n  setCurrentMuscle: \"setCurrentMuscle\",\r\n\r\n  startAddingMuscle: \"startAddingMuscle\",\r\n  startUpdatingMuscle: \"startUpdatingMuscle\",\r\n  startDeletingMuscle: \"startDeletingMuscle\",\r\n\r\n  successAddMuscle: \"successAddMuscle\",\r\n  successGetMuscles: \"successGetMuscles\",\r\n  successUpdateMuscle: \"successUpdateMuscle\",\r\n  successRemoveMuscle: \"successRemoveMuscle\",\r\n\r\n  //Exercises\r\n  startGettingExercises: \"startGettingExercises\",\r\n  successGetExercises: \"successGetExercises\",\r\n  successGetExercisesToAddExistingExercise:\r\n    \"successGetExercisesToAddExistingExercise\",\r\n  failureGetExercises: \"failureGetExercises\",\r\n  clearExercises: \"clearExercises\",\r\n  successAddExercise: \"successAddExercise\",\r\n  failureAddExercise: \"failureAddExercise\",\r\n  setCurrentExercise: \"setCurrentExercise\",\r\n\r\n  successUpdateExercise: \"successUpdateExercise\",\r\n  successRemoveExercise: \"successRemoveExercise\",\r\n  failureUpdateExercise: \"failureUpdateExercise\",\r\n  successDeleteExercise: \"successDeleteExercise\",\r\n\r\n  //Auth\r\n  startLogin: \"startLogin\",\r\n  startRegister: \"stateRegister\",\r\n  successLogin: \"successLogin\",\r\n  finishRenewToken: \"finishRenewToken\",\r\n  clearUser: \"clearUser\",\r\n  logout: \"logout\",\r\n\r\n  //Users\r\n  userSetCurrent: \"userSetCurrent\",\r\n  successAddUser: \"successAddUser\",\r\n  userSuccessGetRoles: \"userSuccessGetRoles\",\r\n  startGetUsers: \"startGetUsers\",\r\n  successGetUsers: \"successGetUsers\",\r\n  userSuccessUpdate: \"userSuccessUpdate\",\r\n  userSuccessDelete: \"userSuccessDelete\",\r\n\r\n  //Workouts\r\n  startGettingMyWorkouts: \"startGettingMyWorkouts\",\r\n  successGetMyWorkouts: \"successGetMyWorkouts\",\r\n  startAddingWorkout: \"startAddingWorkout\",\r\n  successAddWorkout: \"successAddWorkout\",\r\n  startGettingWorkoutExercises: \"startGettingWorkoutExercises\",\r\n  successGetWorkoutExercises: \"successGetWorkoutExercises\",\r\n  setCurrentWorkout: \"setCurrentWorkout\",\r\n  startUpdatingWorkout: \"startUpdatingWorkout\",\r\n  successUpdateWorkout: \"successUpdateWorkout\",\r\n  startDeletingWorkout: \"startDeletingWorkout\",\r\n  successRemoveWorkout: \"successRemoveWorkout\",\r\n\r\n  //UI\r\n  setSnackbar: \"setSnackbar\",\r\n  setModal: \"setModal\",\r\n  setLoading: \"setLoading\",\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\nexport const setSnackbar = (type = \"error\", message = \"\", open = false) => ({\r\n  type: types.setSnackbar,\r\n  payload: {\r\n    type,\r\n    message,\r\n    open,\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport Alert from \"@mui/material/Alert\";\r\nimport { setSnackbar } from \"../../actions/snackbar.action\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nexport const CustomSnackbar = () => {\r\n  const snackbar = useSelector((state) => state.snackbar);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    dispatch(setSnackbar(snackbar.type, snackbar.message, false));\r\n  };\r\n\r\n  return (\r\n    <Snackbar\r\n      open={snackbar.open}\r\n      autoHideDuration={3000}\r\n      onClose={handleClose}\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n    >\r\n      <Alert\r\n        onClose={handleClose}\r\n        severity={snackbar.type}\r\n        elevation={6}\r\n        variant=\"filled\"\r\n      >\r\n        {snackbar.message}\r\n      </Alert>\r\n    </Snackbar>\r\n  );\r\n};\r\n","const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\n//Function when we need to call an endpoint without authentication (Login/Register)\r\nconst fetchNoToken = (endpoint, data, method = \"GET\") => {\r\n  const url = `${baseUrl}/${endpoint}`; //localhost:4000/api/login\r\n  if (method === \"GET\") return fetch(url);\r\n  else {\r\n    return fetch(url, {\r\n      method,\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(data),\r\n    });\r\n  }\r\n};\r\n\r\n//Function when we need to call an endpoint with authentication\r\nconst fetchToken = (endpoint, data, method = \"GET\") => {\r\n  const url = `${baseUrl}/${endpoint}`; //localhost:4000/api/login\r\n  const token = localStorage.getItem(\"token\") || \"\";\r\n  if (method === \"GET\") {\r\n    return fetch(url, {\r\n      method,\r\n      headers: { \"x-token\": token },\r\n    });\r\n  } else {\r\n    return fetch(url, {\r\n      method,\r\n      headers: { \"Content-Type\": \"application/json\", \"x-token\": token },\r\n      body: JSON.stringify(data),\r\n    });\r\n  }\r\n};\r\n\r\nconst fetchTokenFormData = (endpoint, data, method = \"POST\") => {\r\n  const url = `${baseUrl}/${endpoint}`;\r\n  const token = localStorage.getItem(\"token\") || \"\";\r\n\r\n  const formData = new FormData();\r\n  for (const name in data) {\r\n    formData.append(name, data[name]);\r\n  }\r\n\r\n  return fetch(url, {\r\n    method,\r\n    headers: { \"x-token\": token },\r\n    body: formData,\r\n  });\r\n};\r\n\r\n//Another way to export, we could have used: export const fetchToken ...\r\nexport { fetchNoToken, fetchToken, fetchTokenFormData };\r\n","export const adminData = {\r\n  ROLE_ID: 1,\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\nexport const setModal = (\r\n  isOpen = false,\r\n  header = \"Modal title\",\r\n  componentName = \"\"\r\n) => ({\r\n  type: types.setModal,\r\n  payload: {\r\n    isOpen,\r\n    header,\r\n    componentName,\r\n  },\r\n});\r\n","import { fetchToken, fetchTokenFormData } from \"../helpers/fetch\";\r\nimport { types } from \"../types/types\";\r\nimport { setModal } from \"./modal.action\";\r\nimport { setSnackbar } from \"./snackbar.action\";\r\n\r\nconst successGetExercises = (exercises) => ({\r\n  type: types.successGetExercises,\r\n  payload: exercises,\r\n});\r\n\r\nconst successGetExercisesToAddExistingExercise = (exercises) => ({\r\n  type: types.successGetExercisesToAddExistingExercise,\r\n  payload: exercises,\r\n});\r\n\r\nconst failureAction = (error) => ({\r\n  type: types.failureAction,\r\n  payload: error,\r\n});\r\n\r\nexport const startGettingExercises = (id, isNewExercise = true) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const resp = await fetchToken(`exercise/${id}`);\r\n      const body = await resp.json();\r\n      if (resp.ok) {\r\n        if (isNewExercise) dispatch(successGetExercises(body));\r\n        else dispatch(successGetExercisesToAddExistingExercise(body));\r\n      } else {\r\n        dispatch(setSnackbar(\"error\", body.error, true));\r\n        dispatch(failureAction(body.error));\r\n      }\r\n    } catch (error) {\r\n      dispatch(failureAction(error.message));\r\n      dispatch(setSnackbar(\"error\", error.message, true));\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\nconst successAddExercise = (newExercise) => ({\r\n  type: types.successAddExercise,\r\n  payload: newExercise,\r\n});\r\n\r\nexport const startAddingExercise = (newExercise) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const resp = await fetchTokenFormData(\"exercise\", newExercise);\r\n      const body = await resp.json();\r\n      if (resp.ok) {\r\n        newExercise.id = body.exerciseId;\r\n        newExercise.imageName = body.imageName;\r\n        newExercise.imageUrl = body.imageUrl;\r\n        delete newExercise.image;\r\n        dispatch(successAddExercise(newExercise));\r\n        dispatch(setSnackbar(\"success\", \"Exercise added\", true));\r\n      } else {\r\n        //Invalid data\r\n        dispatch(setSnackbar(\"error\", body.error, true));\r\n      }\r\n      dispatch(setModal(false));\r\n    } catch (error) {\r\n      //Server error\r\n      dispatch(failureAction(error.message));\r\n      dispatch(setSnackbar(\"error\", error.message, true));\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const startAddingExistingExercise = (exercise, muscleId) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const resp = await fetchToken(\r\n        `exercise/${exercise.id}`,\r\n        { muscleId },\r\n        \"POST\"\r\n      );\r\n      const body = await resp.json();\r\n      if (resp.ok) {\r\n        dispatch(successAddExercise(exercise));\r\n        dispatch(setSnackbar(\"success\", \"Exercise added\", true));\r\n      } else {\r\n        //Invalid data\r\n        dispatch(setSnackbar(\"error\", body.error, true));\r\n      }\r\n      dispatch(setModal(false));\r\n    } catch (error) {\r\n      //Server error\r\n      dispatch(failureAction(error.message));\r\n      dispatch(setSnackbar(\"error\", error.message, true));\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const setCurrentExercise = (exercise) => ({\r\n  type: types.setCurrentExercise,\r\n  payload: exercise,\r\n});\r\n\r\nconst successUpdateExercise = (exercise) => ({\r\n  type: types.successUpdateExercise,\r\n  payload: exercise,\r\n});\r\n\r\nconst successRemoveExercise = (exerciseIdToRemove) => ({\r\n  type: types.successRemoveExercise,\r\n  payload: exerciseIdToRemove,\r\n});\r\n\r\nexport const startUpdatingExercise = (exercise) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      const { current: selectedMuscle } = getState().muscles;\r\n      //Update current image name with the new name selected\r\n      const resp = await fetchTokenFormData(\r\n        `exercise/${exercise.id}`,\r\n        exercise,\r\n        \"PUT\"\r\n      );\r\n      const body = await resp.json();\r\n      if (resp.ok) {\r\n        // Check if the updated exercise still contains the selected muscle to know if it should be removed from the state\r\n        if (\r\n          selectedMuscle.name === \"All\" ||\r\n          exercise.muscleNames.includes(selectedMuscle.name)\r\n        ) {\r\n          if (exercise.newImage) {\r\n            exercise.imageName = body.imageName;\r\n            exercise.imageUrl = body.imageUrl;\r\n          }\r\n          delete exercise.newImage;\r\n          delete exercise.updateMuscles;\r\n          dispatch(successUpdateExercise(exercise));\r\n        } else dispatch(successRemoveExercise(exercise.id));\r\n\r\n        dispatch(setSnackbar(\"success\", \"Exercise updated\", true));\r\n      } else {\r\n        //Invalid data\r\n        dispatch(setSnackbar(\"error\", body, true));\r\n      }\r\n      dispatch(setModal(false));\r\n    } catch (error) {\r\n      //Server error\r\n      dispatch(failureAction(error.message));\r\n      dispatch(setSnackbar(\"error\", error.message, true));\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const startDeletingExercise = (exerciseId, imageUrl) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      //Update current image name with the new name selected\r\n      const resp = await fetchToken(\r\n        `exercise/${exerciseId}`,\r\n        { imageUrl },\r\n        \"DELETE\"\r\n      );\r\n      if (resp.ok) {\r\n        dispatch(successRemoveExercise(exerciseId));\r\n        dispatch(setSnackbar(\"success\", \"Exercise deleted\", true));\r\n      } else {\r\n        //Invalid data\r\n        const body = await resp.json();\r\n        dispatch(setSnackbar(\"error\", body.error, true));\r\n      }\r\n      dispatch(setModal(false));\r\n    } catch (error) {\r\n      //Server error\r\n      dispatch(failureAction(error.message));\r\n      dispatch(setSnackbar(\"error\", error.message, true));\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const clearExercises = () => ({ type: types.clearExercises });\r\n","import { fetchNoToken, fetchToken, fetchTokenFormData } from \"../helpers/fetch\";\r\nimport { types } from \"../types/types\";\r\nimport { setModal } from \"./modal.action\";\r\nimport { setSnackbar } from \"./snackbar.action\";\r\n\r\nconst muscleEndpoint = \"muscle\";\r\n\r\nconst successGetMuscles = (muscles) => ({\r\n  type: types.successGetMuscles,\r\n  payload: muscles,\r\n});\r\n\r\nconst failureGetMuscles = (error) => ({\r\n  type: types.failureGetMuscles,\r\n  payload: error,\r\n});\r\n\r\nexport const startGettingMuscles = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const resp = await fetchNoToken(muscleEndpoint);\r\n      const body = await resp.json();\r\n      if (resp.ok) dispatch(successGetMuscles(body));\r\n      else dispatch(failureGetMuscles(body.error));\r\n    } catch (error) {\r\n      dispatch(failureGetMuscles(error.message));\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\nconst successAddMuscle = (muscle) => ({\r\n  type: types.successAddMuscle,\r\n  payload: muscle,\r\n});\r\n\r\nexport const startAddingMuscle = (muscle) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      // muscle.imageName = renameImage(muscle.image.name);\r\n      const resp = await fetchTokenFormData(muscleEndpoint, muscle);\r\n      const body = await resp.json();\r\n      if (resp.ok) {\r\n        muscle.id = body.muscleId;\r\n        muscle.imageUrl = body.imageUrl;\r\n        muscle.imageName = body.imageName;\r\n        delete muscle.image;\r\n        dispatch(successAddMuscle(muscle));\r\n        dispatch(setSnackbar(\"success\", \"Muscle added\", true));\r\n      } else {\r\n        dispatch(setSnackbar(\"error\", body.error, true));\r\n      }\r\n      dispatch(setModal(false));\r\n    } catch (error) {\r\n      dispatch(setSnackbar(\"error\", error.message, true));\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\nconst successUpdateMuscle = (muscle) => ({\r\n  type: types.successUpdateMuscle,\r\n  payload: muscle,\r\n});\r\n\r\nexport const startUpdatingMuscle = (muscle) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const resp = await fetchTokenFormData(\r\n        `${muscleEndpoint}/${muscle.id}`,\r\n        muscle,\r\n        \"PUT\"\r\n      );\r\n      const body = await resp.json();\r\n      if (resp.ok) {\r\n        if (muscle.newImage) {\r\n          muscle.imageUrl = body.imageUrl;\r\n          muscle.imageName = body.imageName;\r\n          delete muscle.newImage;\r\n        }\r\n        dispatch(successUpdateMuscle(muscle));\r\n        dispatch(setSnackbar(\"success\", \"Muscle updated\", true));\r\n        dispatch(setModal(false));\r\n      } else {\r\n        dispatch(setSnackbar(\"error\", body.error, true));\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(setSnackbar(\"error\", error.message, true));\r\n    }\r\n  };\r\n};\r\n\r\nconst successRemoveMuscle = (muscleId) => ({\r\n  type: types.successRemoveMuscle,\r\n  payload: muscleId,\r\n});\r\n\r\nexport const startDeletingMuscle = (muscleId, imageUrl, deleteExercises) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const resp = await fetchToken(\r\n        `${muscleEndpoint}/${muscleId}`,\r\n        { imageUrl, deleteExercises },\r\n        \"DELETE\"\r\n      );\r\n      if (resp.ok) {\r\n        dispatch(successRemoveMuscle(muscleId));\r\n        dispatch(setModal(false));\r\n        dispatch(setSnackbar(\"success\", \"Muscle deleted\", true));\r\n        dispatch(setCurrentMuscle(null));\r\n      } else {\r\n        const { error } = await resp.json();\r\n        dispatch(setSnackbar(\"error\", error, true));\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(setSnackbar(\"error\", error.message, true));\r\n    }\r\n  };\r\n};\r\n\r\nexport const clearMuscles = () => ({ type: types.clearMuscles });\r\n\r\nexport const setCurrentMuscle = (muscle) => ({\r\n  type: types.setCurrentMuscle,\r\n  payload: muscle,\r\n});\r\n","import { fetchNoToken, fetchToken } from \"../helpers/fetch\";\r\nimport { adminData } from \"../types/adminData\";\r\nimport { types } from \"../types/types\";\r\nimport { clearExercises } from \"./exercise.action\";\r\nimport { clearMuscles } from \"./muscles.action\";\r\nimport { setSnackbar } from \"./snackbar.action\";\r\n\r\nconst successLogin = (user) => ({\r\n  type: types.successLogin,\r\n  payload: user,\r\n});\r\n\r\nexport const startLogin = (userData) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const resp = await fetchNoToken(\"user\", userData, \"POST\");\r\n      const body = await resp.json();\r\n\r\n      if (!resp.ok) {\r\n        dispatch(setSnackbar(\"error\", body.error, true));\r\n      } else {\r\n        localStorage.setItem(\"token\", body.token);\r\n        if (body.role_id === adminData.ROLE_ID) body.isAdmin = true;\r\n        else body.isAdmin = false;\r\n\r\n        delete body.token;\r\n        dispatch(successLogin(body));\r\n        dispatch(setSnackbar(\"error\", \"\", false));\r\n      }\r\n    } catch (error) {\r\n      dispatch(setSnackbar(\"error\", error.message, false));\r\n\r\n      console.log(\"error\", error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const startRegister = (userData) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const resp = await fetchNoToken(\"user/register\", userData, \"POST\");\r\n      const body = await resp.json();\r\n\r\n      if (!resp.ok) {\r\n        dispatch(setSnackbar(\"error\", body.error, true));\r\n      } else {\r\n        localStorage.setItem(\"token\", body.token);\r\n        body.isAdmin = false;\r\n\r\n        delete body.token;\r\n        dispatch(successLogin(body));\r\n        dispatch(setSnackbar(\"error\", \"\", false)); //close snanckbar if open\r\n      }\r\n    } catch (error) {\r\n      dispatch(setSnackbar(\"error\", error.message, false));\r\n      console.log(\"error\", error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const startRenewToken = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const resp = await fetchToken(\"user/renew\");\r\n      const body = await resp.json();\r\n\r\n      if (resp.ok) {\r\n        localStorage.setItem(\"token\", body.token);\r\n\r\n        if (body.role_id === adminData.ROLE_ID) body.isAdmin = true;\r\n        else body.isAdmin = false;\r\n\r\n        body.id = body.uid;\r\n        delete body.uid;\r\n        delete body.token;\r\n        dispatch(successLogin(body));\r\n      } else dispatch(finishRenewToken());\r\n    } catch (error) {\r\n      //Internal server error\r\n      console.log(error);\r\n      dispatch(\r\n        setSnackbar(\"error\", \"It was no possible to retrieve the data\", true)\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\nexport const finishRenewToken = () => ({ type: types.finishRenewToken });\r\n\r\nconst clearUser = () => ({ type: types.clearUser });\r\n\r\nexport const logout = () => {\r\n  return (dispatch) => {\r\n    localStorage.clear();\r\n    dispatch(clearUser());\r\n    dispatch(clearMuscles());\r\n    dispatch(clearExercises());\r\n  };\r\n};\r\n","import { Email, Lock } from \"@mui/icons-material\";\r\nimport { Button, InputAdornment, TextField, Typography } from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { startLogin } from \"../../actions/auth.action\";\r\n\r\nexport const LoginScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const [body, setBody] = useState({ email: \"\", password: \"\" });\r\n\r\n  const handleChange = (e) => {\r\n    setBody({\r\n      ...body,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    dispatch(startLogin(body));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"flex-container center\">\r\n        <div className=\"login-box\">\r\n          <div className=\"login-box__header\">\r\n            <Typography variant=\"h4\">Sign in</Typography>\r\n            <Typography variant=\"h6\" color=\"textSecondary\">\r\n              Welcome back!\r\n            </Typography>\r\n          </div>\r\n          <div className=\"login-box__body\">\r\n            <form style={{ display: \"grid\" }} onSubmit={handleLogin}>\r\n              <div className=\"space-elements-y--1\">\r\n                <TextField\r\n                  id=\"txtLoginEmail\"\r\n                  fullWidth\r\n                  label=\"Email\"\r\n                  name=\"email\"\r\n                  onChange={handleChange}\r\n                  placeholder=\"Email\"\r\n                  type=\"email\"\r\n                  value={body.email}\r\n                  variant=\"outlined\"\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <Email />\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                />\r\n                <TextField\r\n                  fullWidth\r\n                  id=\"txtLoginPassword\"\r\n                  label=\"Password\"\r\n                  name=\"password\"\r\n                  onChange={handleChange}\r\n                  placeholder=\"Password\"\r\n                  type=\"password\"\r\n                  value={body.password}\r\n                  variant=\"outlined\"\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <Lock />\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"login-box__buttonArea\">\r\n                <div className=\"login-box__buttonArea__item\">\r\n                  <Button variant=\"contained\" size=\"large\" type=\"submit\">\r\n                    Log in\r\n                  </Button>\r\n                </div>\r\n                <div className=\"login-box__buttonArea__item\">\r\n                  <Link to=\"/register\">\r\n                    <Button variant=\"contained\" size=\"large\" color=\"secondary\">\r\n                      Register\r\n                    </Button>\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Button from \"@mui/material/Button\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { startRegister } from \"../../actions/auth.action\";\r\n\r\nexport const RegisterScreen = () => {\r\n  const errorsInitialState = {\r\n    name: \"\",\r\n    lastname: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n  const dispatch = useDispatch();\r\n  const [errors, setErrors] = useState(errorsInitialState);\r\n\r\n  const formValid = (data) => {\r\n    const formErrors = { ...errorsInitialState };\r\n    let isValid = true;\r\n    if (!data.name) {\r\n      formErrors.name = \"Invalid name\";\r\n      isValid = false;\r\n    }\r\n\r\n    if (!data.lastname) {\r\n      formErrors.lastname = \"Invalid last name\";\r\n      isValid = false;\r\n    }\r\n\r\n    if (!data.email) {\r\n      formErrors.email = \"Invalid email\";\r\n      isValid = false;\r\n    }\r\n\r\n    if (!data.password) {\r\n      formErrors.password = \"Invalid password\";\r\n      isValid = false;\r\n    } else if (data.password !== data.confirmPassword) {\r\n      formErrors.password = \"The passwords are not the same\";\r\n      isValid = false;\r\n    }\r\n    setErrors(formErrors);\r\n    return isValid;\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const data = new FormData(event.currentTarget);\r\n\r\n    const registerData = {\r\n      name: data.get(\"name\"),\r\n      lastname: data.get(\"lastname\"),\r\n      email: data.get(\"email\"),\r\n      password: data.get(\"password\"),\r\n      confirmPassword: data.get(\"confirmPassword\"),\r\n    };\r\n\r\n    if (formValid(registerData)) {\r\n      delete registerData.confirmPassword;\r\n      dispatch(startRegister(registerData));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex-container center\">\r\n      <div className=\"login-box\">\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign up\r\n          </Typography>\r\n          <Box\r\n            component=\"form\"\r\n            noValidate\r\n            onSubmit={handleSubmit}\r\n            sx={{ mt: 3 }}\r\n          >\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  name=\"name\"\r\n                  required\r\n                  fullWidth\r\n                  label=\"First Name\"\r\n                  helperText={errors.name}\r\n                  error={!!errors.name}\r\n                  autoFocus\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  label=\"Last Name\"\r\n                  name=\"lastname\"\r\n                  helperText={errors.lastname}\r\n                  error={!!errors.lastname}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  label=\"Email Address\"\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  helperText={errors.email}\r\n                  error={!!errors.email}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  helperText={errors.password}\r\n                  error={!!errors.password}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  name=\"confirmPassword\"\r\n                  label=\"Confirm password\"\r\n                  type=\"password\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n            >\r\n              Sign Up\r\n            </Button>\r\n            <Grid container justifyContent=\"flex-end\">\r\n              <Grid item>\r\n                <Link to=\"/login\">Already have an account? Sign in</Link>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Box>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { GitHub, LinkedIn } from \"@mui/icons-material\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Typography,\r\n} from \"@mui/material\";\r\n\r\nconst AboutScreen = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <Typography variant=\"h4\" component=\"h1\" marginY={3}>\r\n        About\r\n      </Typography>\r\n      <p>\r\n        Workouts App is a web application that provides information on exercises\r\n        classified by muscle groups.\r\n      </p>\r\n      <p>\r\n        You can create your own workouts by selecting the exercises you want!!\r\n      </p>\r\n      <br />\r\n      <hr />\r\n      <br />\r\n      <p>This app was made with the following technologies:</p>\r\n      <br />\r\n      <b>Frontend</b>\r\n      <List>\r\n        <ListItem>\r\n          <ListItemText primary=\"HTML, CSS/SCSS\" />\r\n        </ListItem>\r\n        <ListItem>\r\n          <a\r\n            className=\"link\"\r\n            href=\"https://es.reactjs.org/\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            <ListItemText primary=\"React JS\" />\r\n          </a>\r\n        </ListItem>\r\n        <ListItem>\r\n          <a\r\n            className=\"link\"\r\n            href=\"https://mui.com/\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            <ListItemText primary=\"Material UI v5.0.2\" />\r\n          </a>\r\n        </ListItem>\r\n      </List>\r\n      <b>Backend & Database</b>\r\n      <List>\r\n        <ListItem>\r\n          <ListItemText primary=\"NodeJS - Express\" />\r\n        </ListItem>\r\n        <ListItem>\r\n          <ListItemText primary=\"SQL server\" />\r\n        </ListItem>\r\n      </List>\r\n      <hr />\r\n      <br />\r\n      <b>Author info</b>\r\n      <p>Isaac Montes Jiménez</p>\r\n      <List>\r\n        <ListItem>\r\n          <ListItemIcon>\r\n            <GitHub />\r\n          </ListItemIcon>\r\n          <a\r\n            className=\"link\"\r\n            href=\"https://github.com/mjIsaac17/workouts-app-frontend\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            <ListItemText primary=\"Github/mjIsaac17\" />\r\n          </a>\r\n        </ListItem>\r\n        <ListItem>\r\n          <ListItemIcon>\r\n            <LinkedIn />\r\n          </ListItemIcon>\r\n          <a\r\n            className=\"link\"\r\n            href=\"https://www.linkedin.com/in/isaac-montes-a75b85194/\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            <ListItemText primary=\"Linkedin\" />\r\n          </a>\r\n        </ListItem>\r\n      </List>\r\n      <br />\r\n      <br />\r\n      <br />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AboutScreen;\r\n","import { Close } from \"@mui/icons-material\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { setModal } from \"../../actions/modal.action\";\r\n\r\nexport const Modal = ({ children, modalSize = \"sm\" }) => {\r\n  // console.log(\"render Modal\");\r\n  const handleClose = () => {\r\n    dispatch(setModal(false, \"\"));\r\n  };\r\n  const dispatch = useDispatch();\r\n  const { isOpen, header } = useSelector((state) => state.modal);\r\n  const showHideClassName = isOpen\r\n    ? \"modal display-block\"\r\n    : \"modal display-none\";\r\n\r\n  useEffect(() => {\r\n    //Remove scroll from body when modal is active\r\n    document.body.classList.add(\"remove-scrollbar\");\r\n    return () => {\r\n      document.body.classList.remove(\"remove-scrollbar\");\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className={showHideClassName}>\r\n      <div className={`modal__container modal--${modalSize}`}>\r\n        <div className=\"modal__header\">\r\n          <p>{header}</p>\r\n          <button type=\"button\" className=\"closeModal\" onClick={handleClose}>\r\n            <Close />\r\n          </button>\r\n        </div>\r\n        <div className=\"modal__body\">{children}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { useState } from \"react\";\r\n\r\nexport const useForm = (initialState = {}) => {\r\n  const [values, setValues] = useState(initialState);\r\n  const handleInputChange = ({ target }) => {\r\n    setValues({\r\n      ...values,\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n\r\n  const setSpecificValue = (name, value) => {\r\n    setValues({\r\n      ...values,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const setForm = (formValues) => {\r\n    setValues({ ...formValues });\r\n  };\r\n\r\n  const reset = () => {\r\n    setValues(initialState);\r\n  };\r\n\r\n  return [values, handleInputChange, setSpecificValue, setForm, reset];\r\n};\r\n","import { Stack, Button, InputLabel } from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const InputFile = React.memo(\r\n  ({ id, name, currentImageName, onChangeFunction }) => {\r\n    const [newImageName, setNewImageName] = useState(\r\n      currentImageName ? currentImageName : \"No image selected\"\r\n    );\r\n    // console.log(\"render <InputFile/>\");\r\n    const handleChange = (e) => {\r\n      setNewImageName(e.target.files[0].name);\r\n      if (onChangeFunction) onChangeFunction();\r\n    };\r\n    return (\r\n      <div className=\"m-y--1\">\r\n        <label htmlFor={name}>\r\n          <Stack direction={{ xs: \"column\", sm: \"row\" }} alignItems=\"center\">\r\n            <input\r\n              id={id}\r\n              name={name}\r\n              onChange={handleChange}\r\n              type=\"file\"\r\n              style={{ display: \"none\" }}\r\n            />\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"info\"\r\n              component=\"span\"\r\n              size=\"small\"\r\n              sx={{ marginRight: \"1rem\" }}\r\n            >\r\n              New Image\r\n            </Button>\r\n            <InputLabel>{newImageName}</InputLabel>\r\n          </Stack>\r\n        </label>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nInputFile.propTypes = {\r\n  id: PropTypes.string,\r\n  name: PropTypes.string,\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Select from \"@mui/material/Select\";\r\nimport Chip from \"@mui/material/Chip\";\r\n\r\nconst MultipleSelect = ({\r\n  items,\r\n  placeholder = \"Select\",\r\n  defaultValues,\r\n  name,\r\n}) => {\r\n  const [selectedMuscles, setSelectedMuscles] = useState([]);\r\n\r\n  const handleChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setSelectedMuscles(\r\n      // On autofill we get a stringified value.\r\n      typeof value === \"string\" ? value.split(\",\") : value\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (defaultValues && defaultValues !== \"All\")\r\n      setSelectedMuscles(defaultValues.split(\",\"));\r\n  }, [defaultValues, setSelectedMuscles]);\r\n\r\n  return (\r\n    <>\r\n      <Select\r\n        displayEmpty\r\n        multiple\r\n        value={selectedMuscles}\r\n        onChange={handleChange}\r\n        input={<OutlinedInput />}\r\n        name={name}\r\n        id={name}\r\n        renderValue={(selected) => {\r\n          if (selected.length === 0) return <em>{placeholder}</em>;\r\n\r\n          return (\r\n            <Box sx={{ display: \"flex\", flexWrap: \"wrap\", gap: 0.5 }}>\r\n              {selected.map((name) => (\r\n                <Chip key={name} label={name} />\r\n              ))}\r\n            </Box>\r\n          );\r\n        }}\r\n        size=\"small\"\r\n      >\r\n        <MenuItem disabled value=\"\">\r\n          <em>{placeholder}</em>\r\n        </MenuItem>\r\n        {items.map(({ name }) => (\r\n          <MenuItem key={name} value={name}>\r\n            {name}\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MultipleSelect;\r\n","import React, { useState } from \"react\";\r\nimport { FormControl, Stack, TextField, Button } from \"@mui/material\";\r\nimport LoadingButton from \"@mui/lab/LoadingButton\";\r\nimport SaveIcon from \"@mui/icons-material/Save\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport { startAddingExercise } from \"../../actions/exercise.action\";\r\nimport { setSnackbar } from \"../../actions/snackbar.action\";\r\n\r\nimport { useForm } from \"../../hooks/useForm\";\r\nimport { InputFile } from \"../ui/InputFile\";\r\nimport MultipleSelect from \"../ui/MultipleSelect\";\r\n\r\nexport const AddExerciseForm = ({\r\n  muscleList,\r\n  selectedMuscleName = \"\",\r\n  handleModal,\r\n}) => {\r\n  // console.log(\"render <AddExerciseForm/> \");\r\n  const dispatch = useDispatch();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // custom hooks\r\n  const [formValues, handleInputChange, setSpecificValue] = useForm({\r\n    name: \"\",\r\n    description: \"\",\r\n    image: null,\r\n  });\r\n\r\n  // functions\r\n  const isFormValid = (muscleNames) => {\r\n    if (!formValues.name) {\r\n      dispatch(setSnackbar(\"error\", \"Invalid exercise name\", true));\r\n      return false;\r\n    }\r\n\r\n    if (muscleNames === \"\") {\r\n      dispatch(setSnackbar(\"error\", \"Select a valid muscle\", true));\r\n      return false;\r\n    }\r\n\r\n    const image = document.getElementById(\"image\").files[0];\r\n    if (!image) {\r\n      dispatch(setSnackbar(\"error\", \"Select an image\", true));\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  const setImage = () => {\r\n    const image = document.getElementById(\"image\").files[0];\r\n    setSpecificValue(\"image\", image);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const muscleNames = document.getElementsByName(\"muscleNames\")[0].value;\r\n    if (isFormValid(muscleNames)) {\r\n      setLoading(true);\r\n      dispatch(startAddingExercise({ ...formValues, muscleNames }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className=\"flex-box space-between space-elements-y--1 \">\r\n        <TextField\r\n          className=\"w49\"\r\n          size=\"small\"\r\n          name=\"name\"\r\n          required\r\n          label=\"Exercise name\"\r\n          onChange={handleInputChange}\r\n        />\r\n        <FormControl className=\"w49\">\r\n          <MultipleSelect\r\n            items={muscleList}\r\n            placeholder=\"Select muscles\"\r\n            name=\"muscleNames\"\r\n            defaultValues={selectedMuscleName}\r\n          />\r\n        </FormControl>\r\n      </div>\r\n\r\n      <TextField\r\n        sx={{ margin: \"0.5rem 0\" }}\r\n        size=\"small\"\r\n        name=\"description\"\r\n        fullWidth\r\n        label=\"Description\"\r\n        multiline\r\n        rows=\"3\"\r\n        onChange={handleInputChange}\r\n      />\r\n      <InputFile id=\"image\" name=\"image\" onChangeFunction={setImage} />\r\n      <Stack\r\n        direction=\"row\"\r\n        spacing={2}\r\n        justifyContent=\"flex-end\"\r\n        className=\"m-t--2\"\r\n      >\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"info\"\r\n          onClick={() => handleModal(false, \"\")}\r\n        >\r\n          Cancel\r\n        </Button>\r\n        <LoadingButton\r\n          color=\"success\"\r\n          endIcon={<SaveIcon />}\r\n          loading={loading}\r\n          loadingPosition=\"end\"\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n        >\r\n          Save\r\n        </LoadingButton>\r\n      </Stack>\r\n    </form>\r\n  );\r\n};\r\n","import { useState } from \"react\";\r\nimport { Button, Stack, Typography } from \"@mui/material\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setCurrentExercise } from \"../../actions/exercise.action\";\r\nimport { setModal } from \"../../actions/modal.action\";\r\n\r\nexport const DetailsExercise = ({ exerciseList }) => {\r\n  // console.log(\"render details\");\r\n  const dispatch = useDispatch();\r\n\r\n  // selectors\r\n  const { current: currentExercise } = useSelector((state) => state.exercises);\r\n\r\n  // states\r\n  const [currentIndex, setCurrentIndex] = useState(\r\n    exerciseList.findIndex((e) => e.id === currentExercise.id)\r\n  );\r\n\r\n  // functions\r\n  const handleSetNewExercise = (navigate = \"next\") => {\r\n    let newExercise = {};\r\n    if (navigate === \"next\") {\r\n      if (exerciseList[currentIndex + 1]) {\r\n        newExercise = exerciseList[currentIndex + 1];\r\n        setCurrentIndex(currentIndex + 1);\r\n      } else {\r\n        newExercise = exerciseList[0];\r\n        setCurrentIndex(0);\r\n      }\r\n    } else {\r\n      if (exerciseList[currentIndex - 1]) {\r\n        newExercise = exerciseList[currentIndex - 1];\r\n        setCurrentIndex(currentIndex - 1);\r\n      } else {\r\n        newExercise = exerciseList[exerciseList.length - 1];\r\n        setCurrentIndex(exerciseList.length - 1);\r\n      }\r\n    }\r\n    dispatch(setCurrentExercise(newExercise));\r\n  };\r\n\r\n  const handleImageClick = () => {\r\n    if (currentExercise.imageUrl)\r\n      window.open(currentExercise.imageUrl, \"_blank\");\r\n  };\r\n  if (currentExercise)\r\n    return (\r\n      <div className=\"modal-details\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn__navigation btn__navigation--previous\"\r\n          onClick={() => handleSetNewExercise(\"previous\")}\r\n        >\r\n          {\"<\"}\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn__navigation btn__navigation--next\"\r\n          onClick={() => handleSetNewExercise(\"next\")}\r\n        >\r\n          {\">\"}\r\n        </button>\r\n        <div className=\"modal-details__image-section\">\r\n          <img\r\n            onClick={handleImageClick}\r\n            className=\"image\"\r\n            src={\r\n              currentExercise.imageUrl\r\n                ? currentExercise.imageUrl\r\n                : `${process.env.PUBLIC_URL}/img/default.jpg`\r\n            }\r\n            alt={currentExercise.imageName}\r\n          />\r\n        </div>\r\n        <div className=\"modal-details__form-section\">\r\n          <div style={{ height: \"100%\" }}>\r\n            {currentExercise.description !== \"\" && (\r\n              <div className=\"details details__description\">\r\n                <Typography>{currentExercise.description}</Typography>\r\n              </div>\r\n            )}\r\n            <div className=\"details\">\r\n              <Typography>Category: {currentExercise.muscleName}</Typography>\r\n            </div>\r\n          </div>\r\n          <Stack direction=\"row\" justifyContent=\"flex-end\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"info\"\r\n              onClick={() => dispatch(setModal(false, \"\"))}\r\n              size=\"small\"\r\n            >\r\n              Close\r\n            </Button>\r\n          </Stack>\r\n        </div>\r\n      </div>\r\n    );\r\n  else return <p>Loading ... </p>;\r\n};\r\n","import { useEffect, useState } from \"react\";\r\n\r\nconst Image = ({ imageUrl, defaultImageUrl, altText = \"\", className = \"\" }) => {\r\n  const [src, setSrc] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setSrc(imageUrl || defaultImageUrl);\r\n  }, [setSrc, imageUrl, defaultImageUrl]);\r\n\r\n  return (\r\n    <img\r\n      className={className}\r\n      src={src}\r\n      alt={altText}\r\n      onError={() => setSrc(defaultImageUrl)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Image;\r\n","import React from \"react\";\r\nimport Image from \"../ui/Image\";\r\n\r\nexport const ExerciseItem = ({ exercise }) => {\r\n  return (\r\n    <>\r\n      <div className=\"card card--sm\">\r\n        <Image\r\n          imageUrl={exercise.imageUrl}\r\n          defaultImageUrl={`${process.env.PUBLIC_URL}/img/default.jpg`}\r\n          altText={exercise.imageName}\r\n        />\r\n        <div className=\"card__title\">\r\n          <p>{exercise.name}</p>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { Delete } from \"@mui/icons-material\";\r\nimport { Button, Stack } from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\nexport const ConfirmDelete = ({ children, handleDelete, handleCancel }) => {\r\n  return (\r\n    <>\r\n      {children}\r\n      <Stack\r\n        direction=\"row\"\r\n        spacing={2}\r\n        justifyContent=\"flex-end\"\r\n        className=\"m-t--2\"\r\n      >\r\n        <Button variant=\"contained\" color=\"info\" onClick={handleCancel}>\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          endIcon={<Delete />}\r\n          color=\"error\"\r\n          onClick={handleDelete}\r\n        >\r\n          Accept\r\n        </Button>\r\n      </Stack>\r\n    </>\r\n  );\r\n};\r\n","import { useState } from \"react\";\r\nimport { Delete, Save } from \"@mui/icons-material\";\r\nimport { Alert, Button, FormControl, Stack, TextField } from \"@mui/material\";\r\nimport LoadingButton from \"@mui/lab/LoadingButton\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  startDeletingExercise,\r\n  startUpdatingExercise,\r\n  setCurrentExercise,\r\n} from \"../../actions/exercise.action\";\r\nimport { setModal } from \"../../actions/modal.action\";\r\nimport { useForm } from \"../../hooks/useForm\";\r\nimport { ConfirmDelete } from \"../ui/ConfirmDelete\";\r\nimport { InputFile } from \"../ui/InputFile\";\r\nimport { setSnackbar } from \"../../actions/snackbar.action\";\r\nimport MultipleSelect from \"../ui/MultipleSelect\";\r\n\r\nexport const DetailsExerciseAdmin = ({ exerciseList }) => {\r\n  // console.log(\"render details\", muscleId);\r\n  const dispatch = useDispatch();\r\n\r\n  // selectors\r\n  const { current } = useSelector((state) => state.exercises);\r\n\r\n  // states\r\n  const [deleteMode, setDeleteMode] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [currentIndex, setCurrentIndex] = useState(\r\n    exerciseList.findIndex((e) => e.id === current.id)\r\n  );\r\n\r\n  // custom hooks\r\n  const [formValues, handleInputChange, setSpecificValue, setForm] = useForm({\r\n    ...current, //Contains the data of the selected exercise\r\n    newImage: null, //image file\r\n  });\r\n\r\n  // constants & variables\r\n  const muscleList = JSON.parse(localStorage.getItem(\"muscleList\"));\r\n  const inputImageName = \"newImage\";\r\n\r\n  // functions\r\n  const isFormValid = (muscleNames) => {\r\n    if (!formValues.name) {\r\n      dispatch(setSnackbar(\"error\", \"Invalid exercise name\", true));\r\n      return false;\r\n    }\r\n\r\n    if (muscleNames === \"\") {\r\n      dispatch(setSnackbar(\"error\", \"Select a valid muscle\", true));\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  const setNewImage = () => {\r\n    setSpecificValue(\r\n      inputImageName,\r\n      document.getElementById(inputImageName).files[0]\r\n    );\r\n  };\r\n\r\n  // handler functions\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const muscleNames = document.getElementsByName(\"muscleNames\")[0].value;\r\n\r\n    if (isFormValid(muscleNames)) {\r\n      let updateMuscles = muscleNames !== formValues.muscleNames;\r\n\r\n      setLoading(true);\r\n      dispatch(\r\n        startUpdatingExercise({ ...formValues, muscleNames, updateMuscles })\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleCancelDelete = () => {\r\n    setDeleteMode(false);\r\n  };\r\n  const handleDelete = () => {\r\n    dispatch(startDeletingExercise(formValues.id, formValues.imageUrl));\r\n  };\r\n\r\n  const handleSetNewExercise = (navigate = \"next\") => {\r\n    let newExercise = {};\r\n    if (navigate === \"next\") {\r\n      if (exerciseList[currentIndex + 1]) {\r\n        newExercise = exerciseList[currentIndex + 1];\r\n        setCurrentIndex(currentIndex + 1);\r\n      } else {\r\n        newExercise = exerciseList[0];\r\n        setCurrentIndex(0);\r\n      }\r\n    } else {\r\n      if (exerciseList[currentIndex - 1]) {\r\n        newExercise = exerciseList[currentIndex - 1];\r\n        setCurrentIndex(currentIndex - 1);\r\n      } else {\r\n        newExercise = exerciseList[exerciseList.length - 1];\r\n        setCurrentIndex(exerciseList.length - 1);\r\n      }\r\n    }\r\n    dispatch(setCurrentExercise(newExercise));\r\n    setForm({\r\n      ...formValues,\r\n      ...newExercise,\r\n    });\r\n  };\r\n\r\n  const handleImageClick = () => {\r\n    if (formValues.imageUrl) window.open(formValues.imageUrl, \"_blank\");\r\n  };\r\n\r\n  if (!deleteMode)\r\n    return (\r\n      <form onSubmit={handleSubmit} className=\"modal-details\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn__navigation btn__navigation--previous\"\r\n          onClick={() => handleSetNewExercise(\"previous\")}\r\n        >\r\n          {\"<\"}\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn__navigation btn__navigation--next\"\r\n          onClick={() => handleSetNewExercise(\"next\")}\r\n        >\r\n          {\">\"}\r\n        </button>\r\n        <div className=\"modal-details__image-section\">\r\n          <img\r\n            onClick={handleImageClick}\r\n            className=\"image\"\r\n            src={\r\n              formValues?.imageUrl\r\n                ? formValues.imageUrl\r\n                : `${process.env.PUBLIC_URL}/img/default.jpg`\r\n            }\r\n            alt={formValues.imageName}\r\n          />\r\n        </div>\r\n        <div className=\"modal-details__form-section\">\r\n          <div>\r\n            <TextField\r\n              size=\"small\"\r\n              label=\"Exercise Name\"\r\n              fullWidth\r\n              name=\"name\"\r\n              onChange={handleInputChange}\r\n              value={formValues.name}\r\n            />\r\n\r\n            <TextField\r\n              sx={{ margin: \"1rem 0\" }}\r\n              size=\"small\"\r\n              name=\"description\"\r\n              fullWidth\r\n              label=\"Description\"\r\n              multiline\r\n              rows=\"3\"\r\n              onChange={handleInputChange}\r\n              value={formValues.description}\r\n            />\r\n            <FormControl fullWidth>\r\n              <MultipleSelect\r\n                items={muscleList}\r\n                placeholder=\"Select muscles\"\r\n                defaultValues={formValues.muscleNames}\r\n                name=\"muscleNames\"\r\n              />\r\n            </FormControl>\r\n\r\n            <InputFile\r\n              name={inputImageName}\r\n              id={inputImageName}\r\n              onChangeFunction={setNewImage}\r\n            />\r\n          </div>\r\n\r\n          <Stack direction=\"row\" justifyContent=\"space-between\">\r\n            <Button\r\n              variant=\"contained\"\r\n              endIcon={<Delete />}\r\n              color=\"error\"\r\n              size=\"small\"\r\n              onClick={() => setDeleteMode(true)}\r\n            >\r\n              Delete\r\n            </Button>\r\n\r\n            <Stack direction=\"row\" spacing={2}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"info\"\r\n                onClick={() => dispatch(setModal(false, \"\"))}\r\n                size=\"small\"\r\n              >\r\n                Close\r\n              </Button>\r\n\r\n              <LoadingButton\r\n                color=\"success\"\r\n                endIcon={<Save />}\r\n                loading={loading}\r\n                loadingPosition=\"end\"\r\n                variant=\"contained\"\r\n                type=\"submit\"\r\n                size=\"small\"\r\n              >\r\n                Save\r\n              </LoadingButton>\r\n            </Stack>\r\n          </Stack>\r\n        </div>\r\n      </form>\r\n    );\r\n  else\r\n    return (\r\n      <>\r\n        <ConfirmDelete\r\n          handleCancel={handleCancelDelete}\r\n          handleDelete={handleDelete}\r\n        >\r\n          <Alert severity=\"warning\">\r\n            Are you sure you want to delete the exercise <b>{current.name}</b>?\r\n          </Alert>\r\n        </ConfirmDelete>\r\n      </>\r\n    );\r\n};\r\n","export const componentsModal = {\r\n  muscleList: \"MuscleList\",\r\n  muscleItem: \"MuscleItem\",\r\n  exerciseList: \"ExerciseList\",\r\n  exerciseItem: \"ExerciseItem\",\r\n  exerciseNew: \"ExerciseNew\",\r\n  exerciseAddExisting: \"ExerciseAddExisting\",\r\n  workoutsAdd: \"WorkoutsAdd\",\r\n  workoutsUpdate: \"WorkoutsUpdate\",\r\n  workoutsDelete: \"WorkoutsDelete\",\r\n  workoutsExercise: \"WorkoutsExercise\",\r\n\r\n  userAdd: \"usersAdd\",\r\n  userEdit: \"userEdit\",\r\n  userDelete: \"userDelete\",\r\n};\r\n","import { Button, Stack } from \"@mui/material\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setModal } from \"../../actions/modal.action\";\r\nimport { componentsModal } from \"../../helpers/componentsModal\";\r\n\r\nconst WayToAddExercise = () => {\r\n  const dispatch = useDispatch();\r\n  const { current: currentMuscle } = useSelector((state) => state.muscles);\r\n\r\n  const handleClick = (typeToAdd) => {\r\n    if (typeToAdd === \"new\")\r\n      dispatch(\r\n        setModal(true, \"Add new exercise\", componentsModal.exerciseList)\r\n      );\r\n    else\r\n      dispatch(\r\n        setModal(\r\n          true,\r\n          `Add exercise to ${currentMuscle.name}`,\r\n          componentsModal.exerciseAddExisting\r\n        )\r\n      );\r\n  };\r\n\r\n  return (\r\n    <Stack direction=\"row\" spacing={3} justifyContent=\"center\">\r\n      <Button\r\n        color=\"primary\"\r\n        variant=\"contained\"\r\n        onClick={() => handleClick(\"new\")}\r\n      >\r\n        New\r\n      </Button>\r\n      <Button\r\n        color=\"secondary\"\r\n        variant=\"contained\"\r\n        onClick={() => handleClick(\"existing\")}\r\n      >\r\n        Existing\r\n      </Button>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default WayToAddExercise;\r\n","import { useRef, useState, memo } from \"react\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport { Popover, Typography } from \"@mui/material\";\r\n\r\nconst columns = [\r\n  { field: \"name\", headerName: \"Exercise name\", width: 150 },\r\n  { field: \"description\", headerName: \"Description\", width: 250 },\r\n];\r\n\r\nexport const DataTableSelect = memo(({ handleAdd, exerciseList }) => {\r\n  // console.log(\"render <DataTableSelect />\");\r\n  const [hoverExercise, setHoverExercise] = useState({});\r\n  const divRef = useRef();\r\n\r\n  const rows = exerciseList.map((ex) => ({\r\n    id: ex.id,\r\n    name: ex.name,\r\n    description: ex.description,\r\n    imageName: ex.imageName,\r\n    imageUrl: ex.imageUrl,\r\n  }));\r\n\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const handlePopoverOpen = (e) => {\r\n    setAnchorEl(divRef.current);\r\n    setHoverExercise({ name: e.row.name, imageUrl: e.row.imageUrl });\r\n  };\r\n\r\n  const handlePopoverClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n\r\n  return (\r\n    <>\r\n      <div style={{ height: 275 }}>\r\n        <DataGrid\r\n          ref={divRef}\r\n          aria-owns={open ? \"mouse-over-popover\" : undefined}\r\n          aria-haspopup=\"true\"\r\n          rows={rows}\r\n          columns={columns}\r\n          pageSize={5}\r\n          rowsPerPageOptions={[5]}\r\n          disableSelectionOnClick\r\n          onCellClick={handleAdd}\r\n          onCellEnter={handlePopoverOpen}\r\n          onCellLeave={handlePopoverClose}\r\n          density=\"compact\"\r\n        />\r\n        <Popover\r\n          id=\"mouse-over-popover\"\r\n          sx={{\r\n            pointerEvents: \"none\",\r\n          }}\r\n          open={open}\r\n          anchorEl={anchorEl}\r\n          anchorOrigin={{\r\n            vertical: \"top\",\r\n            horizontal: \"right\",\r\n          }}\r\n          transformOrigin={{\r\n            vertical: \"top\",\r\n            horizontal: \"left\",\r\n          }}\r\n          onClose={handlePopoverClose}\r\n          disableRestoreFocus\r\n        >\r\n          <Typography sx={{ p: 1 }}>{hoverExercise.name}</Typography>\r\n          <img\r\n            style={{ maxWidth: \"150px\" }}\r\n            src={hoverExercise.imageUrl}\r\n            alt={hoverExercise.imageName}\r\n          />\r\n        </Popover>\r\n      </div>\r\n    </>\r\n  );\r\n});\r\n","import { memo, useState } from \"react\";\r\nimport Tabs from \"@mui/material/Tabs\";\r\nimport Tab from \"@mui/material/Tab\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport const VerticalTabs = memo(\r\n  ({ muscleList, handleChange, removeCurrentMuscle = false }) => {\r\n    // console.log(\"render <VerticalTabs>\");\r\n    const [value, setValue] = useState(0);\r\n    const { current } = useSelector((state) => state.muscles);\r\n\r\n    const handleClick = (event, newValue) => {\r\n      setValue(newValue);\r\n      handleChange(newValue);\r\n    };\r\n\r\n    return (\r\n      <Tabs\r\n        variant=\"scrollable\"\r\n        value={value}\r\n        onChange={handleClick}\r\n        aria-label=\"Vertical tabs example\"\r\n        sx={{ borderRight: 1, borderColor: \"divider\" }}\r\n      >\r\n        <Tab key=\"tab-all\" label=\"All\" value={0} />\r\n        {!removeCurrentMuscle\r\n          ? muscleList.map((muscle) => (\r\n              <Tab\r\n                key={`tab-${muscle.name}`}\r\n                value={muscle.id}\r\n                label={muscle.name}\r\n              />\r\n            ))\r\n          : muscleList.map(\r\n              (muscle) =>\r\n                muscle.id !== current.id && (\r\n                  <Tab\r\n                    key={`tab-${muscle.name}`}\r\n                    value={muscle.id}\r\n                    label={muscle.name}\r\n                  />\r\n                )\r\n            )}\r\n      </Tabs>\r\n    );\r\n  }\r\n);\r\n","import { useEffect, useState } from \"react\";\r\nimport SaveIcon from \"@mui/icons-material/Save\";\r\nimport LoadingButton from \"@mui/lab/LoadingButton\";\r\nimport { Stack, Typography, Button } from \"@mui/material\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport {\r\n  startAddingExistingExercise,\r\n  startGettingExercises,\r\n} from \"../../actions/exercise.action\";\r\nimport { startGettingMuscles } from \"../../actions/muscles.action\";\r\nimport { DataTableSelect } from \"../ui/DataTableSelect\";\r\nimport Image from \"../ui/Image\";\r\nimport { VerticalTabs } from \"../ui/VerticalTabs\";\r\n\r\nimport { setModal } from \"../../actions/modal.action\";\r\nimport { setSnackbar } from \"../../actions/snackbar.action\";\r\n\r\nconst AddExistingExercise = () => {\r\n  const dispatch = useDispatch();\r\n  const [selectedExercise, setSelectedExercise] = useState(null);\r\n\r\n  const {\r\n    muscleList,\r\n    loading: muscleLoading,\r\n    current: currentMuscle,\r\n  } = useSelector((state) => state.muscles);\r\n\r\n  // states\r\n  const [saving, setSaving] = useState(false);\r\n\r\n  // selectors\r\n  const { exerciseListToAddNew, exerciseList } = useSelector(\r\n    (state) => state.exercises\r\n  );\r\n\r\n  // handler functions\r\n  const handleSelectExercise = (event) => {\r\n    // Verify if the selected exercise already exists in the muscle exercises\r\n    if (exerciseList.find((exercise) => exercise.id === event.row.id)) {\r\n      dispatch(\r\n        setSnackbar(\r\n          \"info\",\r\n          `The exercise ${event.row.name} already exists in ${currentMuscle.name} exericises`,\r\n          true\r\n        )\r\n      );\r\n    } else {\r\n      setSelectedExercise(event.row);\r\n    }\r\n  };\r\n\r\n  const handleMuscleChange = (muscleId) => {\r\n    dispatch(startGettingExercises(muscleId, false));\r\n  };\r\n\r\n  const handleSave = () => {\r\n    setSaving(true);\r\n    dispatch(startAddingExistingExercise(selectedExercise, currentMuscle.id));\r\n  };\r\n\r\n  // effects\r\n  useEffect(() => {\r\n    if (muscleList.length === 0) dispatch(startGettingMuscles());\r\n    dispatch(startGettingExercises(0, false));\r\n  }, [dispatch, muscleList.length]);\r\n\r\n  return (\r\n    <div>\r\n      {muscleLoading ? (\r\n        <p>Loading muscles</p>\r\n      ) : (\r\n        <VerticalTabs\r\n          muscleList={muscleList}\r\n          handleChange={handleMuscleChange}\r\n          removeCurrentMuscle={true}\r\n        />\r\n      )}\r\n\r\n      <DataTableSelect\r\n        handleAdd={handleSelectExercise}\r\n        exerciseList={exerciseListToAddNew}\r\n      />\r\n      {!selectedExercise ? (\r\n        <Typography component=\"p\" variant=\"h6\" textAlign=\"center\" marginY={1}>\r\n          No exercise selected\r\n        </Typography>\r\n      ) : (\r\n        <>\r\n          <Typography component=\"p\" variant=\"h6\" textAlign=\"center\" marginY={1}>\r\n            Selected exercise: {selectedExercise.name}\r\n          </Typography>\r\n          <div className=\"modal-new-exercise__image-section\">\r\n            <Image\r\n              imageUrl={selectedExercise.imageUrl}\r\n              defaultImageUrl={`${process.env.PUBLIC_URL}/img/default.jpg`}\r\n              altText={selectedExercise.imageName}\r\n              className=\"modal-image-30\"\r\n            />\r\n          </div>\r\n          <Stack\r\n            direction=\"row\"\r\n            spacing={2}\r\n            justifyContent=\"flex-end\"\r\n            className=\"m-t--2\"\r\n          >\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"info\"\r\n              onClick={() => dispatch(setModal(false))}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <LoadingButton\r\n              color=\"success\"\r\n              endIcon={<SaveIcon />}\r\n              loading={saving}\r\n              loadingPosition=\"end\"\r\n              onClick={handleSave}\r\n              variant=\"contained\"\r\n            >\r\n              Save\r\n            </LoadingButton>\r\n          </Stack>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddExistingExercise;\r\n","const fullBorder = {\r\n  top: { style: \"thin\" },\r\n  bottom: { style: \"thin\" },\r\n  left: { style: \"thin\" },\r\n  right: { style: \"thin\" },\r\n};\r\n\r\nconst headerStyle = { sz: \"18\", bold: true };\r\nconst dataStyle = {\r\n  font: { sz: \"14\" },\r\n  border: fullBorder,\r\n};\r\n\r\nexport const exerciseProps = {\r\n  columns: [\r\n    {\r\n      title: \"Exercise\",\r\n      width: { wpx: 200 },\r\n      style: { font: headerStyle, border: fullBorder },\r\n    },\r\n    {\r\n      title: \"Muscle\",\r\n      width: { wpx: 200 },\r\n      style: { font: headerStyle, border: fullBorder },\r\n    },\r\n    {\r\n      title: \"Description\",\r\n      width: { wpx: 300 },\r\n      style: { font: headerStyle, border: fullBorder },\r\n    },\r\n  ],\r\n  data: [\r\n    {\r\n      value: \"name\",\r\n      style: dataStyle,\r\n    },\r\n    {\r\n      value: \"muscleName\",\r\n      style: dataStyle,\r\n    },\r\n    {\r\n      value: \"description\",\r\n      style: {\r\n        ...dataStyle,\r\n        alignment: {\r\n          wrapText: true,\r\n        },\r\n      },\r\n    },\r\n  ],\r\n};\r\n","import { FileDownload } from \"@mui/icons-material\";\r\nimport { IconButton, Tooltip } from \"@mui/material\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport ReactExport from \"react-data-export\";\r\nimport { exerciseProps } from \"../../helpers/excelProps\";\r\nimport PropTypes from \"prop-types\";\r\nimport { setSnackbar } from \"../../actions/snackbar.action\";\r\n\r\nconst ExcelFile = ReactExport.ExcelFile;\r\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\r\n\r\nexport const BtnExportToExcel = ({ dataSource, data, fileName, sheetName }) => {\r\n  const dispatch = useDispatch();\r\n  let excelFormat = {};\r\n  switch (dataSource) {\r\n    case \"exercises\":\r\n      excelFormat = exerciseProps;\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n\r\n  const dataSet = [\r\n    {\r\n      columns: excelFormat.columns.map(({ title, width, style }) => ({\r\n        title,\r\n        width,\r\n        style,\r\n      })),\r\n      data: data.map((item) =>\r\n        excelFormat.data.map(({ value, style }) => ({\r\n          value: item[value],\r\n          style,\r\n        }))\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const handleClick = () => {\r\n    dispatch(setSnackbar(\"info\", \"There is no data to export\", true));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {data.length > 0 ? (\r\n        <ExcelFile\r\n          element={\r\n            <Tooltip title=\"Export to Excel\">\r\n              <IconButton aria-label=\"export to excel\" color=\"success\">\r\n                <FileDownload />\r\n              </IconButton>\r\n            </Tooltip>\r\n          }\r\n          filename={fileName}\r\n        >\r\n          <ExcelSheet dataSet={dataSet} name={sheetName} />\r\n        </ExcelFile>\r\n      ) : (\r\n        <Tooltip title=\"Export to Excel\" onClick={handleClick}>\r\n          <IconButton aria-label=\"export to excel\" color=\"success\">\r\n            <FileDownload />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nBtnExportToExcel.propTypes = {\r\n  dataSource: PropTypes.string,\r\n  data: PropTypes.array,\r\n  fileName: PropTypes.string,\r\n  sheetName: PropTypes.string,\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { jsPDF } from \"jspdf\";\r\nimport { PictureAsPdf } from \"@mui/icons-material\";\r\nimport { IconButton, Tooltip } from \"@mui/material\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setSnackbar } from \"../../actions/snackbar.action\";\r\n\r\nexport const BtnExportExercisesToPDF = ({\r\n  exercises,\r\n  totalExercises,\r\n  fileName,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const [loading, setLoading] = useState(false);\r\n  const loadImage = (exercise) =>\r\n    new Promise((resolve) => {\r\n      const img = new Image();\r\n      img.onload = () => resolve(img);\r\n      img.src = exercise.imageUrl;\r\n    });\r\n\r\n  const handleExportToPDF = () => {\r\n    if (totalExercises > 0) {\r\n      //Max size for images\r\n      setLoading(true);\r\n      const maxHeight = 190,\r\n        maxWidth = 170;\r\n      const doc = new jsPDF(\"p\", \"mm\", \"a4\");\r\n\r\n      // Prepare images\r\n      Promise.all(exercises.map(loadImage))\r\n        .then((images) => {\r\n          images.forEach((image, i) => {\r\n            const exercise = exercises[i];\r\n            doc.setFont(\"helvetica\", \"bold\");\r\n            doc.setFontSize(22);\r\n            doc.text(exercise.name, 20, 20);\r\n            doc.setFontSize(16);\r\n            doc.setFont(\"helvetica\", \"normal\");\r\n            doc.text(exercise.description, 20, 40);\r\n            let height = image.height,\r\n              width = image.width;\r\n\r\n            const ratio = height / width;\r\n            if (height > maxHeight || width > maxWidth) {\r\n              if (height > width) {\r\n                height = maxHeight;\r\n                width = height * (1 / ratio);\r\n              } else if (width > height) {\r\n                width = maxWidth;\r\n                height = width * ratio;\r\n              }\r\n            }\r\n\r\n            doc.addImage(\r\n              image,\r\n              exercise.imageName.split(\".\").at(-1),\r\n              20,\r\n              55,\r\n              width,\r\n              height\r\n            );\r\n            if (i < totalExercises - 1) doc.addPage(\"a4\", \"p\");\r\n          });\r\n          doc.save(`${fileName}.pdf`);\r\n          setLoading(false);\r\n        })\r\n        .catch((error) => {\r\n          dispatch(\r\n            setSnackbar(\r\n              \"error\",\r\n              \"It was not possible to export the data to PDF\",\r\n              true\r\n            )\r\n          );\r\n          setLoading(false);\r\n        });\r\n    } else dispatch(setSnackbar(\"info\", \"There is no data to export\", true));\r\n  };\r\n  return (\r\n    <Tooltip title=\"Export to PDF\">\r\n      <IconButton\r\n        aria-label=\"export to pdf\"\r\n        color=\"error\"\r\n        onClick={handleExportToPDF}\r\n        disabled={loading}\r\n      >\r\n        <PictureAsPdf />\r\n        {loading && (\r\n          <div className=\"lds-ring\">\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n          </div>\r\n        )}\r\n      </IconButton>\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nBtnExportExercisesToPDF.propTypes = {\r\n  exercises: PropTypes.array,\r\n  totalExercises: PropTypes.number,\r\n  fileName: PropTypes.string,\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Add, Search } from \"@mui/icons-material\";\r\nimport {\r\n  Fab,\r\n  FormControl,\r\n  InputAdornment,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n  Tooltip,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport {\r\n  startGettingExercises,\r\n  setCurrentExercise,\r\n} from \"../../actions/exercise.action\";\r\nimport { setModal } from \"../../actions/modal.action\";\r\nimport { setCurrentMuscle } from \"../../actions/muscles.action\";\r\n\r\nimport { Modal } from \"../ui/Modal\";\r\nimport { AddExerciseForm } from \"./AddExerciseForm\";\r\nimport { DetailsExercise } from \"./DetailsExercise\";\r\nimport { ExerciseItem } from \"./ExerciseItem\";\r\nimport { DetailsExerciseAdmin } from \"./DetailsExerciseAdmin\";\r\nimport WayToAddExercise from \"./WayToAddExercise\";\r\nimport AddExistingExercise from \"./AddExistingExercise\";\r\nimport { BtnExportToExcel } from \"../data-export/BtnExportToExcel\";\r\nimport { BtnExportExercisesToPDF } from \"../data-export/BtnExportExercisesToPDF\";\r\nimport { componentsModal } from \"../../helpers/componentsModal\";\r\n\r\nexport const ExerciseList = () => {\r\n  // console.log(\"render <ExerciseList/>\");\r\n  const dispatch = useDispatch();\r\n\r\n  // constants & variables\r\n  const muscleList = JSON.parse(localStorage.getItem(\"muscleList\"));\r\n\r\n  // selectors\r\n  const modalState = useSelector((state) => state.modal);\r\n  const { isAdmin } = useSelector((state) => state.auth.user);\r\n  const currentMuscle = useSelector((state) => state.muscles.current);\r\n  const { exerciseList, loading } = useSelector((state) => state.exercises);\r\n\r\n  // states\r\n  const [filterWord, setFilterWord] = useState(\"\");\r\n  const [totalExercises, setTotalExercises] = useState(exerciseList.length);\r\n\r\n  // functions\r\n  const handleSelect = (e) => {\r\n    const selectedMuscleId = e.target.value;\r\n    dispatch(\r\n      setCurrentMuscle(\r\n        selectedMuscleId !== 0\r\n          ? muscleList.find((muscle) => muscle.id === selectedMuscleId)\r\n          : null\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleModal = (isOpen, title, componentName) => {\r\n    dispatch(setModal(isOpen, title, componentName));\r\n  };\r\n\r\n  const handleClick = (exercise) => {\r\n    dispatch(setCurrentExercise(exercise));\r\n    dispatch(setModal(true, exercise.name, componentsModal.exerciseItem));\r\n  };\r\n\r\n  const handleSearch = (e) => {\r\n    // Avoid getting error with RegEx because of the '\\' escape character\r\n    const search = e.target.value.replace(/\\\\/g, \"\\\\\\\\\");\r\n    setFilterWord(search);\r\n    if (search !== \"\") setTotalExercises(countElements(search));\r\n    else setTotalExercises(exerciseList.length);\r\n  };\r\n\r\n  const handleAddClick = () => {\r\n    if (currentMuscle.id !== 0)\r\n      handleModal(\r\n        true,\r\n        \"Add new or existing exercise\",\r\n        componentsModal.exerciseNew\r\n      );\r\n    else handleModal(true, \"Add new exercise\", componentsModal.exerciseList);\r\n  };\r\n\r\n  const countElements = (filterWord = \"\") => {\r\n    let total = 0;\r\n    exerciseList.map(\r\n      (exercise) =>\r\n        exercise.name.search(new RegExp(filterWord, \"i\")) !== -1 && total++\r\n    );\r\n    return total;\r\n  };\r\n\r\n  // variables\r\n  const currentMuscleName = currentMuscle.name;\r\n\r\n  // effects\r\n  useEffect(() => {\r\n    // console.log(\"effect startGettingExercises\");\r\n    dispatch(startGettingExercises(currentMuscle.id));\r\n  }, [dispatch, currentMuscle.id]);\r\n\r\n  useEffect(() => {\r\n    setTotalExercises(exerciseList.length);\r\n  }, [exerciseList, setTotalExercises]);\r\n\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <h1>Loading...</h1>\r\n      ) : (\r\n        <>\r\n          <div className=\"flex-box space-between m-y--1 space-elements-y--1\">\r\n            <FormControl>\r\n              <InputLabel id=\"lblSelectMuscle\">Muscle</InputLabel>\r\n              <Select\r\n                id=\"ddlMuscle\"\r\n                value={currentMuscle.id}\r\n                label=\"Muscle\"\r\n                labelId=\"lblSelectMuscle\"\r\n                onChange={handleSelect}\r\n                size=\"small\"\r\n              >\r\n                <MenuItem value={0} name=\"All\">\r\n                  All\r\n                </MenuItem>\r\n                {muscleList.map((muscle, index) => (\r\n                  <MenuItem key={index} value={muscle.id}>\r\n                    {muscle.name}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n\r\n            <TextField\r\n              size=\"small\"\r\n              label=\"Search\"\r\n              onChange={handleSearch}\r\n              placeholder=\"Filter exercises\"\r\n              variant=\"outlined\"\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"end\">\r\n                    <Search />\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"flex-box space-between\">\r\n            <Typography variant=\"h5\" component=\"p\">\r\n              Results:\r\n            </Typography>\r\n            <Typography variant=\"h5\" component=\"p\">\r\n              {totalExercises > 0 ? totalExercises : 0} Exercise(s) found\r\n            </Typography>\r\n          </div>\r\n          <div className=\"export-data-buttons-area\">\r\n            <BtnExportToExcel\r\n              dataSource=\"exercises\"\r\n              data={exerciseList}\r\n              fileName={`${currentMuscleName} exercises`}\r\n              sheetName={`${currentMuscleName} exercises`}\r\n            />\r\n            <BtnExportExercisesToPDF\r\n              exercises={exerciseList}\r\n              totalExercises={totalExercises}\r\n              fileName={`${currentMuscleName} exercises`}\r\n            />\r\n          </div>\r\n          <div className=\"card-grid-container\">\r\n            {exerciseList.map(\r\n              (exercise) =>\r\n                exercise.name.search(new RegExp(filterWord, \"i\")) !== -1 && (\r\n                  <div\r\n                    key={exercise.name + exercise.id}\r\n                    onClick={() => handleClick(exercise)}\r\n                  >\r\n                    <ExerciseItem exercise={exercise} />\r\n                  </div>\r\n                )\r\n            )}\r\n          </div>\r\n          {isAdmin && (\r\n            <Tooltip title=\"Add new exercise\">\r\n              <Fab\r\n                sx={{\r\n                  position: \"fixed\",\r\n                  bottom: (theme) => theme.spacing(2),\r\n                  right: (theme) => theme.spacing(2),\r\n                }}\r\n                color=\"primary\"\r\n                aria-label=\"add-exercise\"\r\n                onClick={handleAddClick}\r\n              >\r\n                <Add />\r\n              </Fab>\r\n            </Tooltip>\r\n          )}\r\n\r\n          {modalState.componentName === componentsModal.exerciseList && (\r\n            <Modal>\r\n              <AddExerciseForm\r\n                muscleList={muscleList}\r\n                selectedMuscleName={currentMuscleName}\r\n                handleModal={handleModal}\r\n              />\r\n            </Modal>\r\n          )}\r\n\r\n          {modalState.componentName === componentsModal.exerciseAddExisting && (\r\n            <Modal modalSize=\"md2\">\r\n              <AddExistingExercise />\r\n            </Modal>\r\n          )}\r\n          {modalState.componentName === componentsModal.exerciseItem && (\r\n            <Modal modalSize=\"md\">\r\n              {isAdmin ? (\r\n                <DetailsExerciseAdmin exerciseList={exerciseList} />\r\n              ) : (\r\n                <DetailsExercise exerciseList={exerciseList} />\r\n              )}\r\n            </Modal>\r\n          )}\r\n          {modalState.componentName === componentsModal.exerciseNew && (\r\n            <Modal modalSize=\"sm\">\r\n              <WayToAddExercise />\r\n            </Modal>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport LoadingButton from \"@mui/lab/LoadingButton\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport SaveIcon from \"@mui/icons-material/Save\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setModal } from \"../../actions/modal.action\";\r\nimport { startAddingMuscle } from \"../../actions/muscles.action\";\r\nimport { setSnackbar } from \"../../actions/snackbar.action\";\r\nimport { InputFile } from \"../ui/InputFile\";\r\n\r\nexport const AddMuscle = () => {\r\n  // console.log(\"render <addMuscle/>\");\r\n  const dispatch = useDispatch();\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    //Get muscle data\r\n    const name = document.getElementById(\"muscleName\").value.trim();\r\n    const image = document.getElementById(\"image\").files[0];\r\n    if (!name) {\r\n      setError(\"Invalid muscle name\");\r\n      return;\r\n    }\r\n    if (!image) {\r\n      dispatch(setSnackbar(\"error\", \"The image is required\", true));\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    dispatch(startAddingMuscle({ name, image }));\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <TextField\r\n        size=\"small\"\r\n        id=\"muscleName\"\r\n        name=\"muscleName\"\r\n        required\r\n        fullWidth\r\n        label=\"Muscle name\"\r\n        helperText={error}\r\n        error={!!error}\r\n        autoFocus\r\n      />\r\n\r\n      <div className=\"m-y--1\">\r\n        <InputFile id=\"image\" name=\"image\" />\r\n      </div>\r\n\r\n      <Stack\r\n        direction=\"row\"\r\n        spacing={2}\r\n        justifyContent=\"flex-end\"\r\n        className=\"m-t--2\"\r\n      >\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"info\"\r\n          onClick={() => dispatch(setModal(false))}\r\n        >\r\n          Cancel\r\n        </Button>\r\n        <LoadingButton\r\n          loading={loading}\r\n          loadingPosition=\"end\"\r\n          variant=\"contained\"\r\n          endIcon={<SaveIcon />}\r\n          color=\"success\"\r\n          type=\"submit\"\r\n        >\r\n          Save\r\n        </LoadingButton>\r\n      </Stack>\r\n    </form>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Image from \"../ui/Image\";\r\n\r\nexport const MuscleItem = ({ muscle, editMode = false, onMuscleCardClick }) => {\r\n  return (\r\n    <div className=\"card card--md\" onClick={() => onMuscleCardClick(muscle)}>\r\n      {!editMode ? (\r\n        <Link to={\"/exercises\"}>\r\n          <Image\r\n            imageUrl={muscle.imageUrl}\r\n            defaultImageUrl={`${process.env.PUBLIC_URL}/img/default.jpg`}\r\n            altText={muscle.imageName}\r\n          />\r\n          <div className=\"card__title\">\r\n            <p>{muscle.name}</p>\r\n          </div>\r\n        </Link>\r\n      ) : (\r\n        <>\r\n          <img\r\n            src={\r\n              muscle.imageUrl\r\n                ? muscle.imageUrl\r\n                : `${process.env.PUBLIC_URL}/img/default.jpg`\r\n            }\r\n            alt={muscle.imageName}\r\n          />\r\n          <div className=\"card__title\">\r\n            <p>{muscle.name}</p>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nimport { Delete, Save } from \"@mui/icons-material\";\r\nimport LoadingButton from \"@mui/lab/LoadingButton\";\r\nimport {\r\n  Button,\r\n  FormControlLabel,\r\n  FormControl,\r\n  FormHelperText,\r\n  FormLabel,\r\n  Radio,\r\n  RadioGroup,\r\n  Stack,\r\n  TextField,\r\n} from \"@mui/material\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { setModal } from \"../../actions/modal.action\";\r\nimport {\r\n  startDeletingMuscle,\r\n  startUpdatingMuscle,\r\n} from \"../../actions/muscles.action\";\r\n\r\nimport { componentsModal } from \"../../helpers/componentsModal\";\r\n\r\nimport { ConfirmDelete } from \"../ui/ConfirmDelete\";\r\nimport { InputFile } from \"../ui/InputFile\";\r\n\r\nexport const MuscleDetails = () => {\r\n  // console.log(\"render <MuscleDetails/>\");\r\n  const dispatch = useDispatch();\r\n\r\n  // selectors\r\n  const currentMuscle = useSelector((state) => state.muscles.current);\r\n\r\n  // states\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [deleteExercises, setDeleteExercises] = useState(null);\r\n  const [deleteMode, setDeleteMode] = useState(false);\r\n  const [muscleName, setMuscleName] = useState(currentMuscle.name);\r\n\r\n  // functions\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!muscleName.trim()) {\r\n      setError(\"Invalid muscle name\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    const image = document.getElementById(\"image\").files[0];\r\n    currentMuscle.name = muscleName.trim();\r\n    currentMuscle.newImage = image;\r\n    dispatch(startUpdatingMuscle(currentMuscle));\r\n  };\r\n\r\n  const handleDeleteMode = () => {\r\n    setDeleteMode(!deleteMode);\r\n    dispatch(\r\n      setModal(\r\n        true,\r\n        !deleteMode ? `Delete muscle \"${currentMuscle.name}\"` : \"Edit muscle\",\r\n        componentsModal.muscleItem\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleRadioChange = (event) => {\r\n    if (event.target.value === \"true\") setDeleteExercises(true);\r\n    else setDeleteExercises(false);\r\n    setError(\"\");\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    if (deleteExercises === null) {\r\n      setError(\"Select an option\");\r\n      return;\r\n    }\r\n    dispatch(\r\n      startDeletingMuscle(\r\n        currentMuscle.id,\r\n        currentMuscle.imageUrl,\r\n        deleteExercises\r\n      )\r\n    );\r\n  };\r\n\r\n  if (!deleteMode) {\r\n    return (\r\n      <form onSubmit={handleSubmit} className=\"modal-details\">\r\n        <div className=\"modal-details__image-section\">\r\n          <img\r\n            onClick={() => window.open(currentMuscle.imageUrl, \"_blank\")}\r\n            src={\r\n              currentMuscle.imageUrl\r\n                ? currentMuscle.imageUrl\r\n                : `${process.env.PUBLIC_URL}/img/default.jpg`\r\n            }\r\n            alt={currentMuscle.imageName}\r\n          />\r\n        </div>\r\n        <div className=\"modal-details__form-section\">\r\n          <div>\r\n            <TextField\r\n              size=\"small\"\r\n              id=\"muscleName\"\r\n              name=\"muscleName\"\r\n              required\r\n              fullWidth\r\n              value={muscleName}\r\n              onChange={(e) => setMuscleName(e.target.value)}\r\n              label=\"Muscle name\"\r\n              helperText={error}\r\n              error={!!error}\r\n              autoFocus\r\n            />\r\n            <InputFile\r\n              id=\"image\"\r\n              name=\"image\"\r\n              currentImageName={currentMuscle.imageName}\r\n            />\r\n          </div>\r\n          <Stack direction=\"row\" justifyContent=\"space-between\" spacing={2}>\r\n            <Button\r\n              variant=\"contained\"\r\n              endIcon={<Delete />}\r\n              color=\"error\"\r\n              size=\"small\"\r\n              onClick={() => handleDeleteMode()}\r\n            >\r\n              Delete\r\n            </Button>\r\n\r\n            <Stack direction=\"row\" spacing={2}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"info\"\r\n                onClick={() => dispatch(setModal(false))}\r\n                size=\"small\"\r\n              >\r\n                Cancel\r\n              </Button>\r\n\r\n              <LoadingButton\r\n                loading={loading}\r\n                loadingPosition=\"end\"\r\n                variant=\"contained\"\r\n                endIcon={<Save />}\r\n                color=\"success\"\r\n                type=\"submit\"\r\n                size=\"small\"\r\n              >\r\n                Update\r\n              </LoadingButton>\r\n            </Stack>\r\n          </Stack>\r\n        </div>\r\n      </form>\r\n    );\r\n  } else {\r\n    return (\r\n      <>\r\n        <ConfirmDelete\r\n          handleCancel={handleDeleteMode}\r\n          handleDelete={handleDelete}\r\n        >\r\n          <FormControl component=\"fieldset\" error={!!error}>\r\n            <FormLabel component=\"legend\">\r\n              Delete all exercises associated with \"{currentMuscle.name}\"?\r\n            </FormLabel>\r\n            <RadioGroup\r\n              row\r\n              aria-label=\"delete muscle exercises\"\r\n              onChange={handleRadioChange}\r\n            >\r\n              <FormControlLabel\r\n                id=\"fclDeleteExercisesNo\"\r\n                value={false}\r\n                control={<Radio />}\r\n                label=\"No\"\r\n              />\r\n              <FormControlLabel\r\n                id=\"fclDeleteExercisesYes\"\r\n                value={true}\r\n                control={<Radio />}\r\n                label=\"Yes\"\r\n              />\r\n            </RadioGroup>\r\n            <FormHelperText>{error}</FormHelperText>\r\n          </FormControl>\r\n        </ConfirmDelete>\r\n      </>\r\n    );\r\n  }\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setModal } from \"../../actions/modal.action\";\r\nimport {\r\n  setCurrentMuscle,\r\n  startGettingMuscles,\r\n} from \"../../actions/muscles.action\";\r\nimport { componentsModal } from \"../../helpers/componentsModal\";\r\nimport { Modal } from \"../ui/Modal\";\r\nimport { AddMuscle } from \"./AddMuscle\";\r\nimport { MuscleItem } from \"./MuscleItem\";\r\nimport Fab from \"@mui/material/Fab\";\r\nimport { Add, Close, Edit } from \"@mui/icons-material\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport { setSnackbar } from \"../../actions/snackbar.action\";\r\nimport { MuscleDetails } from \"./MuscleDetails\";\r\nimport { Tooltip, Typography } from \"@mui/material\";\r\n\r\nexport const MusclesList = () => {\r\n  // console.log(\"render <musclesList/>\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // selectors\r\n  const { muscleList, loading } = useSelector((state) => state.muscles);\r\n  const { isAdmin } = useSelector((state) => state.auth.user);\r\n  const modalState = useSelector((state) => state.modal);\r\n\r\n  // states\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  // effects\r\n  useEffect(() => {\r\n    if (muscleList.length === 0) {\r\n      dispatch(startGettingMuscles());\r\n      // console.log(\"effect startgettingMuscles\");\r\n    }\r\n  }, [dispatch, muscleList]);\r\n\r\n  useEffect(() => {\r\n    if (muscleList.length > 0) {\r\n      // console.log(\"effect saveMuscleList\");\r\n      localStorage.setItem(\"muscleList\", JSON.stringify(muscleList));\r\n    }\r\n  }, [muscleList]);\r\n\r\n  // constants & variables\r\n  const fabEditStyle = !editMode\r\n    ? {\r\n        color: \"white\",\r\n        bgcolor: \"#109EB4\",\r\n        \"&:hover\": {\r\n          bgcolor: \"#1087B4\",\r\n        },\r\n      }\r\n    : {\r\n        color: \"white\",\r\n        bgcolor: \"#FE4343\",\r\n        \"&:hover\": {\r\n          bgcolor: \"#DF0000\",\r\n        },\r\n      };\r\n\r\n  // functions\r\n  const handleEditMode = () => {\r\n    setEditMode(!editMode);\r\n    dispatch(setSnackbar(\"info\", \"Select a muscle to edit it\", !editMode));\r\n  };\r\n  //set current muscle in the state\r\n  const handleMuscleClick = (currentMuscle) => {\r\n    dispatch(setCurrentMuscle(currentMuscle));\r\n    if (editMode)\r\n      dispatch(setModal(true, \"Edit muscle\", componentsModal.muscleItem));\r\n  };\r\n\r\n  if (loading) return <h1>Loading...</h1>;\r\n  else\r\n    return (\r\n      <>\r\n        <Typography variant=\"h4\" textAlign=\"center\" margin={3}>\r\n          Muscles\r\n        </Typography>\r\n\r\n        <div className=\"card-grid-container\">\r\n          {muscleList.map((muscle) => (\r\n            <MuscleItem\r\n              key={muscle.id}\r\n              muscle={muscle}\r\n              editMode={editMode}\r\n              onMuscleCardClick={handleMuscleClick}\r\n            />\r\n          ))}\r\n        </div>\r\n\r\n        {isAdmin && (\r\n          <Stack\r\n            direction=\"column\"\r\n            spacing={1}\r\n            sx={{\r\n              position: \"fixed\",\r\n              bottom: (theme) => theme.spacing(2),\r\n              right: (theme) => theme.spacing(2),\r\n            }}\r\n          >\r\n            <Tooltip title={!editMode ? \"Edit muscle\" : \"Cancel editing\"}>\r\n              <Fab\r\n                sx={{ ...fabEditStyle }}\r\n                aria-label=\"edit\"\r\n                onClick={handleEditMode}\r\n              >\r\n                {!editMode ? <Edit /> : <Close />}\r\n              </Fab>\r\n            </Tooltip>\r\n            <Tooltip title=\"Add new muscle\">\r\n              <Fab\r\n                color=\"primary\"\r\n                aria-label=\"edit\"\r\n                onClick={() =>\r\n                  dispatch(\r\n                    setModal(true, \"Add new muscle\", componentsModal.muscleList)\r\n                  )\r\n                }\r\n              >\r\n                <Add />\r\n              </Fab>\r\n            </Tooltip>\r\n          </Stack>\r\n        )}\r\n\r\n        {modalState.componentName === componentsModal.muscleList && (\r\n          <Modal>\r\n            <AddMuscle />\r\n          </Modal>\r\n        )}\r\n        {modalState.componentName === componentsModal.muscleItem && (\r\n          <Modal modalSize=\"md\">\r\n            <MuscleDetails />\r\n          </Modal>\r\n        )}\r\n      </>\r\n    );\r\n};\r\n","import { fetchToken } from \"../helpers/fetch\";\r\nimport { types } from \"../types/types\";\r\nimport { setSnackbar } from \"./snackbar.action\";\r\n\r\nexport const userSetCurrent = (user) => ({\r\n  type: types.userSetCurrent,\r\n  payload: user,\r\n});\r\n\r\nconst successGetUsers = (users) => ({\r\n  type: types.successGetUsers,\r\n  payload: users,\r\n});\r\n\r\nconst successGetRoles = (roles) => ({\r\n  type: types.userSuccessGetRoles,\r\n  payload: roles,\r\n});\r\n\r\nexport const startGettingUsers = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const resp = await fetchToken(\"user\");\r\n      const body = await resp.json();\r\n\r\n      if (!resp.ok) {\r\n        dispatch(setSnackbar(\"error\", body.error, true));\r\n      } else dispatch(successGetUsers(body));\r\n    } catch (error) {\r\n      dispatch(setSnackbar(\"error\", error.message, false));\r\n      console.log(\"error\", error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const userStartGettingRoles = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const resp = await fetchToken(\"user/roles\");\r\n      const body = await resp.json();\r\n\r\n      if (!resp.ok) dispatch(setSnackbar(\"error\", body.error, true));\r\n      else dispatch(successGetRoles(body));\r\n    } catch (error) {\r\n      dispatch(setSnackbar(\"error\", error.message, false));\r\n      console.log(\"error\", error);\r\n    }\r\n  };\r\n};\r\n\r\nconst successAddUser = (user) => ({\r\n  type: types.successAddUser,\r\n  payload: user,\r\n});\r\n\r\nexport const startAddingUser = (userData) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const resp = await fetchToken(\"user/new\", userData, \"POST\");\r\n      const body = await resp.json();\r\n\r\n      if (!resp.ok) {\r\n        dispatch(setSnackbar(\"error\", body.error, true));\r\n      } else {\r\n        dispatch(successAddUser({ ...userData, id: body.userId }));\r\n        dispatch(setSnackbar(\"success\", \"User added\", true)); //close snanckbar if open\r\n      }\r\n    } catch (error) {\r\n      dispatch(setSnackbar(\"error\", error.message, false));\r\n      console.log(\"error\", error);\r\n    }\r\n  };\r\n};\r\n\r\nconst successUpdateUser = (user) => ({\r\n  type: types.userSuccessUpdate,\r\n  payload: user,\r\n});\r\n\r\nexport const startUpdatingUser = (userData) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const resp = await fetchToken(`user/${userData.id}`, userData, \"PUT\");\r\n      const body = await resp.json();\r\n\r\n      if (!resp.ok) {\r\n        dispatch(setSnackbar(\"error\", body.error, true));\r\n      } else {\r\n        dispatch(successUpdateUser(userData));\r\n        dispatch(setSnackbar(\"success\", \"User updated\", true));\r\n      }\r\n    } catch (error) {\r\n      dispatch(setSnackbar(\"error\", error.message, false));\r\n      console.log(\"error\", error);\r\n    }\r\n  };\r\n};\r\n\r\nconst successDeleteUser = (userId) => ({\r\n  type: types.userSuccessDelete,\r\n  payload: userId,\r\n});\r\n\r\nexport const userStartDeleting = (userId) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const resp = await fetchToken(`user/${userId}`, {}, \"DELETE\");\r\n      const body = await resp.json();\r\n\r\n      if (!resp.ok) {\r\n        dispatch(setSnackbar(\"error\", body.error, true));\r\n      } else {\r\n        dispatch(successDeleteUser(userId));\r\n        dispatch(setSnackbar(\"success\", \"User deleted\", true));\r\n      }\r\n    } catch (error) {\r\n      dispatch(setSnackbar(\"error\", error.message, false));\r\n      console.log(\"error\", error);\r\n    }\r\n  };\r\n};\r\n","import Fab from \"@mui/material/Fab\";\r\nimport Add from \"@mui/icons-material/Add\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\n\r\nconst FabAdd = ({ onClickFunction, tooltipText = \"Add\" }) => {\r\n  return (\r\n    <Tooltip title={tooltipText}>\r\n      <Fab\r\n        onClick={onClickFunction}\r\n        sx={{\r\n          position: \"fixed\",\r\n          bottom: (theme) => theme.spacing(2),\r\n          right: (theme) => theme.spacing(2),\r\n        }}\r\n        color=\"primary\"\r\n        aria-label=\"add\"\r\n      >\r\n        <Add />\r\n      </Fab>\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nexport default FabAdd;\r\n","import { Save } from \"@mui/icons-material\";\r\nimport {\r\n  Stack,\r\n  Button,\r\n  TextField,\r\n  Grid,\r\n  InputLabel,\r\n  FormControl,\r\n  FormHelperText,\r\n  Select,\r\n  MenuItem,\r\n} from \"@mui/material\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setModal } from \"../../actions/modal.action\";\r\nimport {\r\n  startAddingUser,\r\n  startUpdatingUser,\r\n  userStartGettingRoles,\r\n} from \"../../actions/user.action\";\r\n\r\nconst initialFormError = {\r\n  name: null,\r\n  lastname: null,\r\n  email: null,\r\n  role_id: null,\r\n  password: null,\r\n  confirmPassword: null,\r\n};\r\n\r\nconst AddUserForm = ({ user }) => {\r\n  const dispatch = useDispatch();\r\n  const { roles } = useSelector((state) => state.user);\r\n  const [formError, setFormError] = useState(initialFormError);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(e.currentTarget);\r\n    const userData = {\r\n      name: formData.get(\"name\").trim(),\r\n      lastname: formData.get(\"lastname\").trim(),\r\n      email: formData.get(\"email\").trim(),\r\n      role_id: formData.get(\"role_id\"),\r\n    };\r\n    if (!user) {\r\n      userData.password = formData.get(\"password\");\r\n      userData.confirmPassword = formData.get(\"confirmPassword\");\r\n    }\r\n\r\n    if (isFormValid(userData)) {\r\n      if (!user) {\r\n        delete userData.confirmPassword;\r\n        dispatch(startAddingUser(userData));\r\n      } else {\r\n        dispatch(startUpdatingUser({ ...userData, id: user.id }));\r\n      }\r\n      dispatch(setModal());\r\n    }\r\n  };\r\n\r\n  const isFormValid = (userData) => {\r\n    let errorFlag = false;\r\n    const errors = { ...initialFormError };\r\n\r\n    if (userData.name === \"\") {\r\n      errors.name = \"Invalid user name\";\r\n      errorFlag = true;\r\n    }\r\n\r\n    if (userData.lastname === \"\") {\r\n      errors.lastname = \"Invalid last name\";\r\n      errorFlag = true;\r\n    }\r\n\r\n    if (userData.email === \"\") {\r\n      errors.email = \"Invalid email\";\r\n      errorFlag = true;\r\n    }\r\n\r\n    if (userData.role_id === \"0\") {\r\n      errors.role_id = \"Select a valid role\";\r\n      errorFlag = true;\r\n    }\r\n\r\n    // Add password if it is a new user\r\n    if (!user) {\r\n      if (userData.password === \"\") {\r\n        errors.password = \"Invalid password\";\r\n        errorFlag = true;\r\n      } else if (userData.password !== userData.confirmPassword) {\r\n        errors.confirmPassword = \"Passwords must match\";\r\n        errorFlag = true;\r\n      }\r\n    }\r\n\r\n    setFormError(errors);\r\n\r\n    if (errorFlag) return false; //invalid form\r\n\r\n    //Form is valid\r\n    return true;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!roles) {\r\n      // console.log(\"Effect load roles\");\r\n      dispatch(userStartGettingRoles());\r\n    }\r\n  }, [dispatch, roles]);\r\n\r\n  return (\r\n    <Grid\r\n      component=\"form\"\r\n      container\r\n      spacing={2}\r\n      onSubmit={handleSubmit}\r\n      sx={{ marginTop: \"0.5rem\" }}\r\n    >\r\n      <Grid item xs={12} sm={6}>\r\n        <TextField\r\n          defaultValue={user?.name}\r\n          error={!!formError.userName}\r\n          fullWidth\r\n          helperText={formError.userName}\r\n          label=\"User name\"\r\n          name=\"name\"\r\n          required\r\n          size=\"small\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <TextField\r\n          defaultValue={user?.lastname}\r\n          error={!!formError.lastname}\r\n          fullWidth\r\n          helperText={formError.lastname}\r\n          label=\"Last name\"\r\n          name=\"lastname\"\r\n          required\r\n          size=\"small\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          defaultValue={user?.email}\r\n          error={!!formError.email}\r\n          fullWidth\r\n          helperText={formError.email}\r\n          label=\"Email\"\r\n          name=\"email\"\r\n          required\r\n          size=\"small\"\r\n          type=\"email\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <FormControl fullWidth error={!!formError.role_id}>\r\n          <InputLabel>Role *</InputLabel>\r\n          {roles && (\r\n            <Select\r\n              required\r\n              size=\"small\"\r\n              defaultValue={user ? user.role_id : 0}\r\n              name=\"role_id\"\r\n              label=\"Role *\"\r\n            >\r\n              <MenuItem value={0}>Select role</MenuItem>\r\n              {roles.map((role) => (\r\n                <MenuItem key={role.id} value={role.id}>\r\n                  {role.role}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          )}\r\n          <FormHelperText>{formError.role_id}</FormHelperText>\r\n        </FormControl>\r\n      </Grid>\r\n      {!user && (\r\n        <>\r\n          <Grid item xs={12} sm={6}>\r\n            <TextField\r\n              error={!!formError.password}\r\n              fullWidth\r\n              helperText={formError.password}\r\n              label=\"Password\"\r\n              name=\"password\"\r\n              required\r\n              size=\"small\"\r\n              type=\"password\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <TextField\r\n              error={!!formError.confirmPassword}\r\n              fullWidth\r\n              helperText={formError.confirmPassword}\r\n              label=\"Confirm password\"\r\n              name=\"confirmPassword\"\r\n              required\r\n              size=\"small\"\r\n              type=\"password\"\r\n            />\r\n          </Grid>\r\n        </>\r\n      )}\r\n      <Grid item xs={12} sx={{ marginTop: \"2rem\" }}>\r\n        <Stack direction=\"row\" spacing={2} justifyContent=\"flex-end\">\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"info\"\r\n            onClick={() => dispatch(setModal(false))}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            endIcon={<Save />}\r\n            color=\"success\"\r\n            type=\"submit\"\r\n          >\r\n            Save\r\n          </Button>\r\n        </Stack>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default AddUserForm;\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport List from \"@mui/material/List\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\n\r\nimport { startGettingUsers } from \"../../actions/user.action\";\r\n\r\nconst UserList = ({ handleEdit, handleDelete, filterWord = \"\" }) => {\r\n  // console.log(\"Render <UserList />\");\r\n\r\n  const dispatch = useDispatch();\r\n  const { users } = useSelector((state) => state.user);\r\n\r\n  useEffect(() => {\r\n    if (!users) {\r\n      // console.log(\"Effect getUsers\");\r\n      dispatch(startGettingUsers());\r\n    }\r\n  }, [dispatch, users]);\r\n\r\n  return (\r\n    <>\r\n      {!users ? (\r\n        <p> Loading...</p>\r\n      ) : (\r\n        <>\r\n          <List sx={{ maxWidth: \"1300px\", width: \"95%\", margin: \"0 auto\" }}>\r\n            {users.map(\r\n              (user, idx) =>\r\n                user.name.search(new RegExp(filterWord, \"i\")) !== -1 && (\r\n                  <div key={idx}>\r\n                    <ListItem>\r\n                      <ListItemText\r\n                        primary={`${user.name} ${user.lastname}`}\r\n                        secondary={user.email}\r\n                      ></ListItemText>\r\n                      <IconButton\r\n                        onClick={() => handleEdit(user)}\r\n                        aria-label=\"delete-user\"\r\n                        variant=\"contained\"\r\n                        color=\"info\"\r\n                      >\r\n                        <EditIcon />\r\n                      </IconButton>\r\n                      <IconButton\r\n                        aria-label=\"delete-user\"\r\n                        variant=\"contained\"\r\n                        color=\"error\"\r\n                        onClick={() => handleDelete(user)}\r\n                      >\r\n                        <DeleteIcon />\r\n                      </IconButton>\r\n                    </ListItem>\r\n                    <Divider />\r\n                  </div>\r\n                )\r\n            )}\r\n          </List>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n","import { Search } from \"@mui/icons-material\";\r\nimport { Alert, Typography, TextField, InputAdornment } from \"@mui/material\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setModal } from \"../../actions/modal.action\";\r\nimport { userSetCurrent, userStartDeleting } from \"../../actions/user.action\";\r\nimport { componentsModal } from \"../../helpers/componentsModal\";\r\nimport { ConfirmDelete } from \"../ui/ConfirmDelete\";\r\nimport FabAdd from \"../ui/FabAdd\";\r\nimport { Modal } from \"../ui/Modal\";\r\nimport AddUserForm from \"./AddUserForm\";\r\nimport UserList from \"./UserList\";\r\n\r\nconst UserScreen = () => {\r\n  // console.log(\"Render <UserScreen />\");\r\n  const dispatch = useDispatch();\r\n\r\n  const { componentName } = useSelector((state) => state.modal);\r\n  const { currentUser } = useSelector((state) => state.user);\r\n\r\n  const [filterWord, setFilterWord] = useState(\"\");\r\n\r\n  const handleFabClick = () => {\r\n    dispatch(setModal(true, \"Add user\", componentsModal.userAdd));\r\n  };\r\n\r\n  const handleEditClick = (user) => {\r\n    dispatch(userSetCurrent(user));\r\n    dispatch(setModal(true, \"Edit user\", componentsModal.userEdit));\r\n  };\r\n\r\n  const handleOpenDeleteModal = (user) => {\r\n    dispatch(userSetCurrent(user));\r\n    dispatch(setModal(true, \"Delete user\", componentsModal.userDelete));\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    dispatch(setModal());\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    dispatch(userStartDeleting(currentUser.id));\r\n    handleCloseModal();\r\n  };\r\n\r\n  const handleSearch = (e) => {\r\n    // Avoid getting error with RegEx because of the '\\' escape character\r\n    const search = e.target.value.replace(/\\\\/g, \"\\\\\\\\\");\r\n    setFilterWord(search);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h4\" textAlign=\"center\" marginY={3}>\r\n        Manage users\r\n      </Typography>\r\n      <div className=\"flex-box\" style={{ justifyContent: \"center\" }}>\r\n        <TextField\r\n          size=\"small\"\r\n          label=\"Search\"\r\n          onChange={handleSearch}\r\n          placeholder=\"Filter\"\r\n          variant=\"outlined\"\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position=\"end\">\r\n                <Search />\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n      </div>\r\n      <UserList\r\n        filterWord={filterWord}\r\n        handleEdit={handleEditClick}\r\n        handleDelete={handleOpenDeleteModal}\r\n      />\r\n      <FabAdd onClickFunction={handleFabClick} tooltipText=\"Add new user\" />\r\n      {componentName === componentsModal.userAdd && (\r\n        <Modal>\r\n          <AddUserForm />\r\n        </Modal>\r\n      )}\r\n      {componentName === componentsModal.userEdit && (\r\n        <Modal>\r\n          <AddUserForm user={currentUser} />\r\n        </Modal>\r\n      )}\r\n      {componentName === componentsModal.userDelete && (\r\n        <Modal>\r\n          <ConfirmDelete\r\n            handleCancel={handleCloseModal}\r\n            handleDelete={handleDelete}\r\n          >\r\n            <Alert severity=\"warning\">\r\n              Are you sure you want to delete the user{\" \"}\r\n              <b>\r\n                {currentUser.name} {currentUser.lastname}\r\n              </b>{\" \"}\r\n              and all its associated data (workouts)?\r\n            </Alert>\r\n          </ConfirmDelete>\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserScreen;\r\n","import { fetchToken, fetchTokenFormData } from \"../helpers/fetch\";\r\nimport { types } from \"../types/types\";\r\nimport { setModal } from \"./modal.action\";\r\nimport { setSnackbar } from \"./snackbar.action\";\r\n\r\nconst workoutEndpoint = \"workout\";\r\n\r\nexport const setLoading = (loading) => ({\r\n  type: types.setLoading,\r\n  payload: loading,\r\n});\r\n\r\nconst successGetMyWorkouts = (workouts) => ({\r\n  type: types.successGetMyWorkouts,\r\n  payload: workouts,\r\n});\r\n\r\nexport const startGettingMyWorkouts = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const resp = await fetchToken(`${workoutEndpoint}/my-workouts`);\r\n      const body = await resp.json();\r\n      if (resp.ok) {\r\n        dispatch(successGetMyWorkouts(body));\r\n      } else {\r\n        dispatch(failureAction());\r\n        dispatch(setSnackbar(\"error\", body.error, true));\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(setSnackbar(\"error\", error.message, true));\r\n    }\r\n  };\r\n};\r\n\r\nexport const successGetWorkoutExercises = (exercises) => ({\r\n  type: types.successGetWorkoutExercises,\r\n  payload: exercises,\r\n});\r\n\r\nexport const startGettingWorkoutExercises = (workoutName) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const resp = await fetchToken(\r\n        `${workoutEndpoint}/my-workouts/${workoutName}`\r\n      );\r\n      const body = await resp.json();\r\n      if (resp.ok) {\r\n        dispatch(successGetWorkoutExercises(body));\r\n      } else {\r\n        dispatch(failureAction());\r\n        dispatch(setSnackbar(\"error\", body.error, true));\r\n        console.log(body.error);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(setSnackbar(\"error\", error.message, true));\r\n    }\r\n  };\r\n};\r\n\r\nexport const setCurrentWorkout = (workout) => ({\r\n  type: types.setCurrentWorkout,\r\n  payload: workout,\r\n});\r\n\r\nconst successAddWorkout = (workout) => ({\r\n  type: types.successAddWorkout,\r\n  payload: workout,\r\n});\r\n\r\nexport const startAddingWorkout = (workout) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const resp = await fetchTokenFormData(workoutEndpoint, workout, \"POST\");\r\n      const body = await resp.json();\r\n      if (resp.ok) {\r\n        if (workout.image) {\r\n          workout.imageName = body.imageName;\r\n          workout.imageUrl = body.imageUrl;\r\n          delete workout.image;\r\n        }\r\n        workout.id = body.workoutId;\r\n        dispatch(successAddWorkout(workout));\r\n        dispatch(setSnackbar(\"success\", \"Workout added\", true));\r\n        dispatch(setModal(false));\r\n      } else dispatch(setSnackbar(\"error\", body.error, true));\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(setSnackbar(\"error\", error.message, true));\r\n    }\r\n  };\r\n};\r\n\r\nconst successUpdateWorkout = (workout) => ({\r\n  type: types.successUpdateWorkout,\r\n  payload: workout,\r\n});\r\n\r\nexport const startUpdatingWorkout = (workout) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const resp = await fetchTokenFormData(\r\n        `${workoutEndpoint}/${workout.id}`,\r\n        workout,\r\n        \"PUT\"\r\n      );\r\n      const body = await resp.json();\r\n      if (resp.ok) {\r\n        if (workout.newImage) {\r\n          workout.imageName = body.imageName;\r\n          workout.imageUrl = body.imageUrl;\r\n          delete workout.newImage;\r\n        }\r\n        dispatch(successUpdateWorkout(workout));\r\n        dispatch(setSnackbar(\"success\", \"Workout updated\", true));\r\n        dispatch(setModal(false));\r\n      } else dispatch(setSnackbar(\"error\", body.error, true));\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(setSnackbar(\"error\", error.message, true));\r\n    }\r\n  };\r\n};\r\n\r\nconst successRemoveWorkout = (id) => ({\r\n  type: types.successRemoveWorkout,\r\n  payload: id,\r\n});\r\n\r\nexport const startDeletingWorkout = (id, imageUrl) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const resp = await fetchToken(\r\n        `${workoutEndpoint}/${id}`,\r\n        { id, imageUrl },\r\n        \"DELETE\"\r\n      );\r\n      const body = await resp.json();\r\n      if (resp.ok) {\r\n        dispatch(successRemoveWorkout(id));\r\n        dispatch(setSnackbar(\"success\", \"Workout deleted\", true));\r\n        dispatch(setModal(false));\r\n      } else dispatch(setSnackbar(\"error\", body.error, true));\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(setSnackbar(\"error\", error.message, true));\r\n    }\r\n  };\r\n};\r\n\r\nconst failureAction = () => ({\r\n  type: types.failureAction,\r\n});\r\n","import React from \"react\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { CardActionArea } from \"@mui/material\";\r\nimport Image from \"../ui/Image\";\r\n\r\nexport const ExerciseCard = ({ exercise, onCardClick }) => {\r\n  return (\r\n    <Card className=\"workout-card\" onClick={() => onCardClick(exercise)}>\r\n      <CardActionArea>\r\n        <Image\r\n          imageUrl={exercise.imageUrl}\r\n          defaultImageUrl={`${process.env.PUBLIC_URL}/img/default.jpg`}\r\n          altText={exercise.name}\r\n          className=\" workout-card__image\"\r\n        />\r\n\r\n        <CardContent className=\"workout-card__text\">\r\n          <Typography\r\n            gutterBottom\r\n            variant=\"h5\"\r\n            component=\"p\"\r\n            className=\"workout-card__text-title\"\r\n          >\r\n            {exercise.name}\r\n          </Typography>\r\n          <Typography\r\n            variant=\"body2\"\r\n            color=\"text.secondary\"\r\n            className=\"workout-card__text-description\"\r\n          >\r\n            {exercise.description}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n    </Card>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { Typography } from \"@mui/material\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router\";\r\nimport { setCurrentExercise } from \"../../actions/exercise.action\";\r\nimport { setModal } from \"../../actions/modal.action\";\r\nimport { startGettingWorkoutExercises } from \"../../actions/workout.action\";\r\nimport { componentsModal } from \"../../helpers/componentsModal\";\r\nimport { BtnExportToExcel } from \"../data-export/BtnExportToExcel\";\r\nimport { DetailsExercise } from \"../exercises/DetailsExercise\";\r\nimport { Modal } from \"../ui/Modal\";\r\nimport { ExerciseCard } from \"./ExerciseCard\";\r\nimport { BtnExportExercisesToPDF } from \"../data-export/BtnExportExercisesToPDF\";\r\n\r\nexport const WorkoutExercisesList = () => {\r\n  const dispatch = useDispatch();\r\n  const { workoutName } = useParams();\r\n  const { currentWorkoutExercises } = useSelector((state) => state.workouts);\r\n  const totalExercises = currentWorkoutExercises.length;\r\n  const modalState = useSelector((state) => state.modal);\r\n\r\n  useEffect(() => {\r\n    if (currentWorkoutExercises.length === 0) {\r\n      // console.log(\"effect startGettingWorkoutExercises\");\r\n      dispatch(startGettingWorkoutExercises(workoutName));\r\n    }\r\n  }, [dispatch, workoutName, currentWorkoutExercises]);\r\n\r\n  const handleSelectExercise = (exercise) => {\r\n    dispatch(setCurrentExercise(exercise));\r\n    dispatch(setModal(true, exercise.name, componentsModal.workoutsExercise));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h4\" component=\"p\" textAlign=\"center\" margin={3}>\r\n        <b>{workoutName}</b> workout\r\n      </Typography>\r\n      <Typography variant=\"h5\" component=\"p\" textAlign=\"right\">\r\n        {totalExercises} Exercise(s)\r\n      </Typography>\r\n      <div className=\"export-data-buttons-area\">\r\n        <BtnExportToExcel\r\n          dataSource=\"exercises\"\r\n          data={currentWorkoutExercises}\r\n          fileName={`${workoutName} workout`}\r\n          sheetName={workoutName}\r\n        />\r\n        <BtnExportExercisesToPDF\r\n          exercises={currentWorkoutExercises}\r\n          totalExercises={totalExercises}\r\n          fileName={workoutName}\r\n        />\r\n      </div>\r\n      <div className=\"card-grid-container\">\r\n        {currentWorkoutExercises.map((exercise, index) => (\r\n          <ExerciseCard\r\n            exercise={exercise}\r\n            key={`${index}-${exercise.name}`}\r\n            onCardClick={handleSelectExercise}\r\n          />\r\n        ))}\r\n      </div>\r\n      {modalState.componentName === componentsModal.workoutsExercise && (\r\n        <Modal modalSize=\"md\">\r\n          <DetailsExercise\r\n            exerciseList={currentWorkoutExercises}\r\n            componentModalName={componentsModal.workoutsExercise}\r\n          />\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Chip from \"@mui/material/Chip\";\r\nimport Paper from \"@mui/material/Paper\";\r\n\r\nconst ListItem = styled(\"li\")(({ theme }) => ({\r\n  margin: theme.spacing(0.5),\r\n}));\r\n\r\nexport const ChipsArray = React.memo(\r\n  ({ chips = [], title = \"\", handleDelete }) => {\r\n    // console.log(\"render ChipsArray\");\r\n\r\n    return (\r\n      <>\r\n        {!!title && <p>{title}</p>}\r\n        <Paper\r\n          sx={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            flexWrap: \"wrap\",\r\n            listStyle: \"none\",\r\n            p: 0.5,\r\n            m: 0,\r\n          }}\r\n          component=\"ul\"\r\n        >\r\n          {chips.map((data) => {\r\n            return (\r\n              <ListItem key={data.key}>\r\n                <Chip label={data.label} onDelete={() => handleDelete(data)} />\r\n              </ListItem>\r\n            );\r\n          })}\r\n        </Paper>\r\n      </>\r\n    );\r\n  }\r\n);\r\n","import React, { useCallback, useMemo, useState } from \"react\";\r\nimport {\r\n  FormControl,\r\n  Input,\r\n  InputLabel,\r\n  FormHelperText,\r\n  Stack,\r\n  Button,\r\n} from \"@mui/material\";\r\nimport LoadingButton from \"@mui/lab/LoadingButton\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Save } from \"@mui/icons-material\";\r\n\r\nimport { useForm } from \"../../hooks/useForm\";\r\nimport { VerticalTabs } from \"../ui/VerticalTabs\";\r\nimport { DataTableSelect } from \"../ui/DataTableSelect\";\r\nimport { ChipsArray } from \"../ui/ChipArray\";\r\nimport { InputFile } from \"../ui/InputFile\";\r\nimport { setModal } from \"../../actions/modal.action\";\r\nimport { setSnackbar } from \"../../actions/snackbar.action\";\r\nimport {\r\n  startAddingWorkout,\r\n  startUpdatingWorkout,\r\n} from \"../../actions/workout.action\";\r\nimport { useEffect } from \"react\";\r\nimport { startGettingExercises } from \"../../actions/exercise.action\";\r\n\r\nexport const WorkoutAdd = ({ action }) => {\r\n  // console.log(\"render <WorkoutsAdd />\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // selectors\r\n  const { currentWorkout, currentWorkoutExercises } = useSelector(\r\n    (state) => state.workouts\r\n  );\r\n  const { exerciseList } = useSelector((state) => state.exercises);\r\n\r\n  // states\r\n  const [chips, setChips] = useState(\r\n    currentWorkoutExercises\r\n      ? currentWorkoutExercises.map((e, index) => ({\r\n          id: e.id,\r\n          label: e.name,\r\n          key: index,\r\n        }))\r\n      : []\r\n  );\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // custom hooks\r\n  const [formValues, handleInputChange] = useForm({\r\n    name: currentWorkout.name || \"\",\r\n    description: currentWorkout.description || \"\",\r\n  });\r\n\r\n  // constants & variables\r\n  const { name, description } = formValues;\r\n  const muscleList = useMemo(\r\n    () => JSON.parse(localStorage.getItem(\"muscleList\")),\r\n    []\r\n  );\r\n\r\n  // functions\r\n  const handleMuscleChange = (muscleId) => {\r\n    dispatch(startGettingExercises(muscleId));\r\n  };\r\n\r\n  const handleAddChip = useCallback(\r\n    (e) => {\r\n      setChips([...chips, { key: Date.now(), label: e.row.name, id: e.id }]);\r\n    },\r\n    [chips]\r\n  );\r\n\r\n  const handleRemoveChip = useCallback(\r\n    (chipToDelete) =>\r\n      setChips(chips.filter((chip) => chip.key !== chipToDelete.key)),\r\n    [chips]\r\n  );\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    //Validate data\r\n    const workoutName = name.trim();\r\n    const workoutDescription = description.trim();\r\n    const image = document.getElementById(\"workoutImage\").files[0];\r\n\r\n    if (!workoutName) {\r\n      setError(\"Invalid workout name\");\r\n      return;\r\n    } else setError(\"\");\r\n\r\n    if (chips.length === 0) {\r\n      dispatch(setSnackbar(\"error\", \"Select at least one exercise\", true));\r\n      return;\r\n    }\r\n    let exerciseIds = chips.map((chip) => chip.id).join(\",\");\r\n    setLoading(true);\r\n    if (action === \"add\")\r\n      dispatch(\r\n        startAddingWorkout({\r\n          name: workoutName,\r\n          description: workoutDescription,\r\n          exerciseIds,\r\n          image,\r\n        })\r\n      );\r\n    else if (action === \"update\") {\r\n      //Check if the workout exercises were updated to avoid deleting and saving them in the db\r\n      const previousIds = currentWorkoutExercises.map((e) => e.id).join(\",\");\r\n      if (previousIds === exerciseIds) exerciseIds = null;\r\n\r\n      dispatch(\r\n        startUpdatingWorkout({\r\n          id: currentWorkout.id,\r\n          name: workoutName,\r\n          description: workoutDescription,\r\n          imageName: currentWorkout.imageName,\r\n          imageUrl: currentWorkout.imageUrl,\r\n          exerciseIds,\r\n          newImage: image,\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(startGettingExercises(0));\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Stack component=\"form\" spacing={2} onSubmit={handleSubmit}>\r\n      <FormControl sx={{ width: \"100%\" }} error={!!error}>\r\n        <InputLabel htmlFor=\"workoutName\">Workout name*</InputLabel>\r\n        <Input\r\n          required\r\n          id=\"workoutName\"\r\n          aria-describedby=\"workout-name\"\r\n          name=\"name\"\r\n          onChange={handleInputChange}\r\n          value={name}\r\n        />\r\n        <FormHelperText id=\"my-helper-text\">\r\n          {!error ? \"Enter a name that describe your workout\" : error}\r\n        </FormHelperText>\r\n      </FormControl>\r\n      <FormControl sx={{ width: \"100%\" }}>\r\n        <InputLabel htmlFor=\"workoutDescription\">Description</InputLabel>\r\n        <Input\r\n          id=\"workoutDescription\"\r\n          aria-describedby=\"workout-description\"\r\n          multiline\r\n          name=\"description\"\r\n          value={description}\r\n          onChange={handleInputChange}\r\n          rows={2}\r\n        />\r\n      </FormControl>\r\n      <div>\r\n        <VerticalTabs\r\n          muscleList={muscleList}\r\n          handleChange={handleMuscleChange}\r\n        />\r\n        <ChipsArray chips={chips} handleDelete={handleRemoveChip} />\r\n        <DataTableSelect\r\n          handleAdd={handleAddChip}\r\n          exerciseList={exerciseList}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"margin-y-1\">\r\n        <InputFile\r\n          id=\"workoutImage\"\r\n          name=\"workoutImage\"\r\n          currentImageName={currentWorkout.imageName}\r\n        />\r\n      </div>\r\n\r\n      <Stack direction=\"row\" spacing={2} justifyContent=\"flex-end\">\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"info\"\r\n          onClick={() => dispatch(setModal(false))}\r\n        >\r\n          Cancel\r\n        </Button>\r\n        <LoadingButton\r\n          loading={loading}\r\n          loadingPosition=\"end\"\r\n          variant=\"contained\"\r\n          endIcon={<Save />}\r\n          color=\"success\"\r\n          type=\"submit\"\r\n        >\r\n          Save\r\n        </LoadingButton>\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { Button, CardActionArea, CardActions } from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Delete, Edit } from \"@mui/icons-material\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setModal } from \"../../actions/modal.action\";\r\nimport { componentsModal } from \"../../helpers/componentsModal\";\r\nimport Image from \"../ui/Image\";\r\n\r\nexport const WorkoutCard = ({ workout, onCardClick }) => {\r\n  const dispatch = useDispatch();\r\n  const handleEdit = () => {\r\n    dispatch(setModal(true, \"Update workout\", componentsModal.workoutsUpdate));\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    dispatch(setModal(true, \"Delete workout\", componentsModal.workoutsDelete));\r\n  };\r\n  return (\r\n    <Card className=\"workout-card\" onClick={() => onCardClick(workout)}>\r\n      <CardActionArea>\r\n        <Link\r\n          style={{ textDecoration: \"none\" }}\r\n          to={`workouts/${workout.name}`}\r\n        >\r\n          <Image\r\n            imageUrl={workout.imageUrl}\r\n            defaultImageUrl={`${process.env.PUBLIC_URL}/img/defaultWorkout.jpg`}\r\n            altText={workout.name}\r\n            className=\"workout-card__image\"\r\n          />\r\n          <CardContent>\r\n            <Typography gutterBottom variant=\"h6\" component=\"p\">\r\n              {workout.name}\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"text.secondary\">\r\n              {workout.description}\r\n            </Typography>\r\n          </CardContent>\r\n        </Link>\r\n      </CardActionArea>\r\n      <CardActions className=\"workout-card__buttons\">\r\n        <Button\r\n          size=\"small\"\r\n          color=\"secondary\"\r\n          endIcon={<Delete />}\r\n          onClick={handleDelete}\r\n        >\r\n          Delete\r\n        </Button>\r\n        <Button\r\n          size=\"small\"\r\n          color=\"primary\"\r\n          endIcon={<Edit />}\r\n          onClick={handleEdit}\r\n        >\r\n          Edit\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n","import { Alert } from \"@mui/material\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setModal } from \"../../actions/modal.action\";\r\nimport {\r\n  setCurrentWorkout,\r\n  setLoading,\r\n  startDeletingWorkout,\r\n  startGettingMyWorkouts,\r\n  startGettingWorkoutExercises,\r\n} from \"../../actions/workout.action\";\r\nimport { componentsModal } from \"../../helpers/componentsModal\";\r\nimport { ConfirmDelete } from \"../ui/ConfirmDelete\";\r\nimport { Modal } from \"../ui/Modal\";\r\nimport { WorkoutAdd } from \"./WorkoutAdd\";\r\nimport { WorkoutCard } from \"./WorkoutCard\";\r\n\r\nexport const WorkoutList = () => {\r\n  // console.log(\"render <WorkoutList/>\");\r\n  const dispatch = useDispatch();\r\n  const { myWorkouts, loading, currentWorkout } = useSelector(\r\n    (state) => state.workouts\r\n  );\r\n  const { componentName } = useSelector((state) => state.modal);\r\n\r\n  useEffect(() => {\r\n    dispatch(startGettingMyWorkouts());\r\n  }, [dispatch]);\r\n\r\n  const handleSelectWorkout = async (workout) => {\r\n    dispatch(setLoading(true));\r\n    dispatch(setCurrentWorkout(workout));\r\n    await dispatch(startGettingWorkoutExercises(workout.name));\r\n    dispatch(setLoading(false));\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    dispatch(startDeletingWorkout(currentWorkout.id, currentWorkout.imageUrl));\r\n  };\r\n  const handleCancel = () => {\r\n    dispatch(setModal(false));\r\n  };\r\n\r\n  return (\r\n    <div className=\"card-flex-container\">\r\n      {myWorkouts.map((workout) => (\r\n        <WorkoutCard\r\n          key={workout.id}\r\n          workout={workout}\r\n          onCardClick={handleSelectWorkout}\r\n        />\r\n      ))}\r\n      {componentName === componentsModal.workoutsAdd && (\r\n        <Modal modalSize=\"md2\">\r\n          <WorkoutAdd action={\"add\"} />\r\n        </Modal>\r\n      )}\r\n      {componentName === componentsModal.workoutsUpdate && (\r\n        <Modal modalSize=\"md2\">\r\n          {loading ? (\r\n            <p>Loading workout data...</p>\r\n          ) : (\r\n            <WorkoutAdd action={\"update\"} />\r\n          )}\r\n        </Modal>\r\n      )}\r\n      {componentName === componentsModal.workoutsDelete && (\r\n        <Modal>\r\n          <ConfirmDelete\r\n            handleCancel={handleCancel}\r\n            handleDelete={handleDelete}\r\n          >\r\n            <Alert severity=\"warning\">\r\n              Are you sure you want to delete your workout\r\n              <b> {currentWorkout.name}</b>?\r\n            </Alert>\r\n          </ConfirmDelete>\r\n        </Modal>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Fab, Tooltip, Typography } from \"@mui/material\";\r\nimport { Add } from \"@mui/icons-material\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { WorkoutList } from \"./WorkoutList\";\r\nimport { setModal } from \"../../actions/modal.action\";\r\nimport {\r\n  setCurrentWorkout,\r\n  successGetWorkoutExercises,\r\n} from \"../../actions/workout.action\";\r\nimport { componentsModal } from \"../../helpers/componentsModal\";\r\n\r\nexport const WorkoutsScreen = () => {\r\n  // console.log(\"render <WorkoutScreen/>\");\r\n  const dispatch = useDispatch();\r\n\r\n  const handleAdd = () => {\r\n    dispatch(setCurrentWorkout({}));\r\n    dispatch(successGetWorkoutExercises([]));\r\n    dispatch(setModal(true, \"Add new workout\", componentsModal.workoutsAdd));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h4\" textAlign=\"center\" margin={3}>\r\n        My workouts\r\n      </Typography>\r\n\r\n      <WorkoutList />\r\n\r\n      <Tooltip title=\"Add new workout\">\r\n        <Fab\r\n          onClick={handleAdd}\r\n          sx={{\r\n            position: \"fixed\",\r\n            bottom: (theme) => theme.spacing(2),\r\n            right: (theme) => theme.spacing(2),\r\n          }}\r\n          color=\"primary\"\r\n          aria-label=\"add-workout\"\r\n        >\r\n          <Add />\r\n        </Fab>\r\n      </Tooltip>\r\n    </>\r\n  );\r\n};\r\n","import { ArrowBack } from \"@mui/icons-material\";\r\nimport { Fab, Tooltip } from \"@mui/material\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Redirect, Route, Switch, useHistory } from \"react-router-dom\";\r\nimport AboutScreen from \"../components/about/AboutScreen\";\r\nimport { ExerciseList } from \"../components/exercises/ExerciseList\";\r\nimport { MusclesList } from \"../components/muscles/MuscleList\";\r\nimport UserScreen from \"../components/users/UserScreen\";\r\n\r\nimport { WorkoutExercisesList } from \"../components/workouts/WorkoutExercisesList\";\r\nimport { WorkoutsScreen } from \"../components/workouts/WorkoutScreen\";\r\n\r\nexport const DashboardRoutes = () => {\r\n  const history = useHistory();\r\n  const { user } = useSelector((state) => state.auth);\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <Switch>\r\n          <Route exact path=\"/exercises\" component={ExerciseList} />\r\n          <Route exact path=\"/muscles\" component={MusclesList} />\r\n          <Route exact path=\"/workouts\" component={WorkoutsScreen} />\r\n          <Route exact path=\"/about\" component={AboutScreen} />\r\n          <Route\r\n            exact\r\n            path=\"/workouts/:workoutName\"\r\n            component={WorkoutExercisesList}\r\n          />\r\n          {user.isAdmin && <Route exact path=\"/users\" component={UserScreen} />}\r\n          <Redirect to=\"/muscles\" />\r\n        </Switch>\r\n        <Tooltip title=\"Previous page\">\r\n          <Fab\r\n            sx={{\r\n              position: \"fixed\",\r\n              bottom: (theme) => theme.spacing(2),\r\n              left: (theme) => theme.spacing(2),\r\n            }}\r\n            color=\"secondary\"\r\n            aria-label=\"return\"\r\n            onClick={() => history.goBack()}\r\n          >\r\n            <ArrowBack />\r\n          </Fab>\r\n        </Tooltip>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const PrivateRoute = ({\r\n  isAuthenticated,\r\n  component: Component,\r\n  ...rest\r\n}) => {\r\n  // localStorage.setItem(\"lastPath\", rest.location.pathname);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      component={(props) =>\r\n        isAuthenticated ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nPrivateRoute.propTypes = {\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n  component: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const PublicRoute = ({\r\n  isAuthenticated,\r\n  component: Component,\r\n  ...rest\r\n}) => {\r\n  // console.log(\"auth login: \", isAuthenticated);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      component={(props) =>\r\n        !isAuthenticated ? <Component {...props} /> : <Redirect to=\"/\" />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nPublicRoute.propTypes = {\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n  component: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport { IconButton, Typography } from \"@mui/material\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { logout } from \"../../actions/auth.action\";\r\nimport { Menu } from \"@mui/icons-material\";\r\n\r\nexport const Navbar = ({ openCloseSidebar }) => {\r\n  const dispatch = useDispatch();\r\n  const { user } = useSelector((state) => state.auth);\r\n\r\n  // console.log(\"render nav\");\r\n\r\n  const handleLogout = () => {\r\n    dispatch(logout());\r\n  };\r\n  if (!user.id)\r\n    return (\r\n      <div className=\"navbar\" style={{ position: \"fixed\", padding: \"0 1rem\" }}>\r\n        <Typography variant=\"h4\" component=\"h2\">\r\n          WorkoutsApp\r\n        </Typography>\r\n      </div>\r\n    );\r\n  else\r\n    return (\r\n      <nav className=\"navbar navbar--fixed\">\r\n        <div className=\"navbar__icon\">\r\n          <IconButton onClick={openCloseSidebar}>\r\n            <Menu fontSize=\"large\" />\r\n          </IconButton>\r\n        </div>\r\n        <div className=\"navbar__content\">\r\n          <div className=\"navbar__logo\">\r\n            <Typography variant=\"h4\" component=\"h2\">\r\n              WorkoutsApp\r\n            </Typography>\r\n          </div>\r\n          <div className=\"navbar__user\">\r\n            <ul>\r\n              <li>{user.name}</li>\r\n              <li className=\"logout m-x--1\" onClick={handleLogout}>\r\n                Logout\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n};\r\n","import {\r\n  Accessibility,\r\n  Directions,\r\n  FitnessCenter,\r\n  Info,\r\n  SupervisedUserCircle,\r\n} from \"@mui/icons-material\";\r\nimport React from \"react\";\r\n\r\nexport const UserSidebarData = [\r\n  {\r\n    title: \"Muscles\",\r\n    icon: <Accessibility />,\r\n    link: \"/muscles\",\r\n  },\r\n  {\r\n    title: \"Exercises\",\r\n    icon: <FitnessCenter />,\r\n    link: \"/exercises\",\r\n  },\r\n  {\r\n    title: \"Workouts\",\r\n    icon: <Directions />,\r\n    link: \"/workouts\",\r\n  },\r\n  {\r\n    title: \"About\",\r\n    icon: <Info />,\r\n    link: \"/about\",\r\n  },\r\n];\r\n\r\nexport const AdminSidebarData = [\r\n  {\r\n    title: \"Users\",\r\n    icon: <SupervisedUserCircle />,\r\n    link: \"/users\",\r\n  },\r\n];\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UserSidebarData, AdminSidebarData } from \"./SidebarData\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Drawer from \"@mui/material/Drawer\";\r\nimport List from \"@mui/material/List\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport { Typography } from \"@mui/material\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport const Sidebar = ({ openSidebar, openCloseSidebar }) => {\r\n  // console.log(\"render sidebar\");\r\n\r\n  const { user } = useSelector((state) => state.auth);\r\n\r\n  return (\r\n    <>\r\n      <Drawer open={openSidebar} onClose={openCloseSidebar}>\r\n        <Box\r\n          sx={{ width: 250 }}\r\n          role=\"presentation\"\r\n          onClick={openCloseSidebar}\r\n          onKeyDown={openCloseSidebar}\r\n        >\r\n          <List>\r\n            <ListItem>\r\n              <ListItemText>\r\n                <Typography variant=\"h5\">WorkoutsApp</Typography>\r\n              </ListItemText>\r\n            </ListItem>\r\n            <Divider />\r\n            {UserSidebarData.map((data, index) => (\r\n              <Link to={data.link} key={index}>\r\n                <ListItem button>\r\n                  <ListItemIcon>{data.icon}</ListItemIcon>\r\n                  <ListItemText primary={data.title} />\r\n                </ListItem>\r\n              </Link>\r\n            ))}\r\n            {user.isAdmin && (\r\n              <>\r\n                {\" \"}\r\n                <Divider />\r\n                <ListItem>\r\n                  <ListItemText>\r\n                    <Typography variant=\"h6\">Management</Typography>\r\n                  </ListItemText>\r\n                </ListItem>\r\n                <Divider />\r\n                {AdminSidebarData.map((data, index) => (\r\n                  <Link to={data.link} key={index}>\r\n                    <ListItem button>\r\n                      <ListItemIcon>{data.icon}</ListItemIcon>\r\n                      <ListItemText primary={data.title} />\r\n                    </ListItem>\r\n                  </Link>\r\n                ))}\r\n              </>\r\n            )}\r\n          </List>\r\n        </Box>\r\n      </Drawer>\r\n    </>\r\n  );\r\n};\r\n","import { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Navbar } from \"./Navbar\";\r\nimport { Sidebar } from \"./Sidebar\";\r\n\r\nexport const Layout = ({ children }) => {\r\n  const [openSidebar, setOpenSidebar] = useState(false);\r\n  const { user } = useSelector((state) => state.auth);\r\n\r\n  const openCloseSidebar = (event) => {\r\n    if (\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n    setOpenSidebar(!openSidebar);\r\n  };\r\n  return (\r\n    <div>\r\n      <Navbar openCloseSidebar={openCloseSidebar} />\r\n      {user.id && (\r\n        <Sidebar\r\n          openCloseSidebar={openCloseSidebar}\r\n          openSidebar={openSidebar}\r\n        />\r\n      )}\r\n      <div className=\"container\">{children}</div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { BrowserRouter as Router, Switch } from \"react-router-dom\";\r\n\r\nimport { finishRenewToken, startRenewToken } from \"../actions/auth.action\";\r\n\r\nimport { LoginScreen } from \"../components/login-register/LoginScreen\";\r\nimport { RegisterScreen } from \"../components/login-register/RegisterScreen\";\r\nimport { DashboardRoutes } from \"./DashboardRoutes\";\r\nimport { PrivateRoute } from \"./PrivateRoute\";\r\nimport { PublicRoute } from \"./PublicRoute\";\r\nimport { Layout } from \"../components/ui/Layout\";\r\n\r\nexport const AppRouter = () => {\r\n  // console.log(\"Render <AppRouter />\");\r\n  const dispatch = useDispatch();\r\n  const { checking, isLogged } = useSelector((state) => state.auth);\r\n\r\n  //Renew the token when the page loads\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!!token) {\r\n      dispatch(startRenewToken());\r\n    } else {\r\n      dispatch(finishRenewToken());\r\n    }\r\n  }, [dispatch]);\r\n\r\n  if (checking) {\r\n    return <h5>Loading</h5>;\r\n  } else {\r\n    return (\r\n      <Router>\r\n        <Layout>\r\n          <Switch>\r\n            <PublicRoute\r\n              exact\r\n              path=\"/login\"\r\n              isAuthenticated={isLogged}\r\n              component={LoginScreen}\r\n            />\r\n            <PublicRoute\r\n              exact\r\n              path=\"/register\"\r\n              isAuthenticated={isLogged}\r\n              component={RegisterScreen}\r\n            />\r\n            <PrivateRoute\r\n              path=\"/\"\r\n              isAuthenticated={isLogged}\r\n              component={DashboardRoutes}\r\n            />\r\n          </Switch>\r\n        </Layout>\r\n      </Router>\r\n    );\r\n  }\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n  muscleList: [],\r\n  loading: true,\r\n  current: { id: 0, name: \"All\" },\r\n};\r\n\r\nexport const muscleReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.successGetMuscles:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        muscleList: action.payload,\r\n      };\r\n\r\n    case types.failureGetMuscles:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    case types.setCurrentMuscle:\r\n      return {\r\n        ...state,\r\n        current: action.payload ? action.payload : initialState.current,\r\n      };\r\n\r\n    case types.successAddMuscle:\r\n      return {\r\n        ...state,\r\n        muscleList: [...state.muscleList, action.payload],\r\n      };\r\n\r\n    case types.successRemoveMuscle:\r\n      const deletedMuscleId = action.payload;\r\n      return {\r\n        ...state,\r\n        muscleList: state.muscleList.filter(\r\n          (muscle) => muscle.id !== deletedMuscleId\r\n        ),\r\n      };\r\n    case types.successUpdateMuscle:\r\n      const updatedMuscle = action.payload;\r\n      return {\r\n        ...state,\r\n        muscleList: state.muscleList.map((muscle) =>\r\n          muscle.id !== updatedMuscle.id ? muscle : updatedMuscle\r\n        ),\r\n      };\r\n\r\n    case types.clearMuscles:\r\n      return initialState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n  exerciseList: [],\r\n  exerciseListToAddNew: [],\r\n  loading: true,\r\n  current: null,\r\n};\r\n\r\nexport const exerciseReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.successGetExercises:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        exerciseList: action.payload,\r\n      };\r\n\r\n    case types.successGetExercisesToAddExistingExercise:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        exerciseListToAddNew: action.payload,\r\n      };\r\n\r\n    case types.failureAction:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    case types.clearExercises:\r\n      return initialState;\r\n\r\n    case types.successAddExercise:\r\n      return {\r\n        ...state,\r\n        exerciseList: [action.payload, ...state.exerciseList],\r\n      };\r\n\r\n    case types.setCurrentExercise:\r\n      return {\r\n        ...state,\r\n        current: action.payload,\r\n      };\r\n\r\n    case types.successUpdateExercise:\r\n      const updatedExercise = action.payload;\r\n      return {\r\n        ...state,\r\n        exerciseList: state.exerciseList.map((exercise) =>\r\n          exercise.id !== updatedExercise.id ? exercise : updatedExercise\r\n        ),\r\n      };\r\n\r\n    case types.successRemoveExercise:\r\n      const exerciseIdToRemove = action.payload;\r\n      return {\r\n        ...state,\r\n        exerciseList: state.exerciseList.filter(\r\n          (exercise) => exercise.id !== exerciseIdToRemove\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n  users: null,\r\n  currentUser: null,\r\n  roles: null,\r\n};\r\n\r\nexport const userReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.userSetCurrent:\r\n      return {\r\n        ...state,\r\n        currentUser: action.payload,\r\n      };\r\n\r\n    case types.successGetUsers:\r\n      return {\r\n        ...state,\r\n        users: action.payload,\r\n      };\r\n\r\n    case types.successAddUser:\r\n      return {\r\n        ...state,\r\n        users: [...state.users, action.payload],\r\n      };\r\n\r\n    case types.userSuccessUpdate:\r\n      const updatedUser = action.payload;\r\n      return {\r\n        ...state,\r\n        users: state.users.map((user) =>\r\n          user.id !== updatedUser.id ? user : updatedUser\r\n        ),\r\n      };\r\n\r\n    case types.userSuccessDelete:\r\n      const deletedId = action.payload;\r\n      return {\r\n        ...state,\r\n        users: state.users.filter((user) => user.id !== deletedId),\r\n      };\r\n\r\n    case types.userSuccessGetRoles:\r\n      return {\r\n        ...state,\r\n        roles: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n  type: \"error\",\r\n  message: \"\",\r\n  open: false,\r\n};\r\n\r\nexport const snackbarReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.setSnackbar:\r\n      const { type, message, open } = action.payload;\r\n      return {\r\n        ...state,\r\n        type,\r\n        message,\r\n        open,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n  isOpen: false,\r\n  header: \"Modal title\",\r\n  componentName: null,\r\n};\r\n\r\nexport const modalReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.setModal:\r\n      const { isOpen, header, componentName } = action.payload;\r\n      return {\r\n        ...state,\r\n        isOpen,\r\n        header,\r\n        componentName,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n  myWorkouts: [],\r\n  loading: true,\r\n  currentWorkout: {},\r\n  currentWorkoutExercises: [],\r\n};\r\nexport const workoutReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.successGetMyWorkouts:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        myWorkouts: action.payload,\r\n      };\r\n\r\n    case types.successGetWorkoutExercises:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        currentWorkoutExercises: action.payload,\r\n      };\r\n\r\n    case types.setCurrentWorkout:\r\n      return {\r\n        ...state,\r\n        currentWorkout: { ...action.payload },\r\n      };\r\n\r\n    case types.successAddWorkout:\r\n      return {\r\n        ...state,\r\n        myWorkouts: [...state.myWorkouts, action.payload],\r\n      };\r\n\r\n    case types.successUpdateWorkout:\r\n      const updatedWorkout = action.payload;\r\n      return {\r\n        ...state,\r\n        myWorkouts: [\r\n          ...state.myWorkouts.map((w) =>\r\n            w.id !== updatedWorkout.id ? w : updatedWorkout\r\n          ),\r\n        ],\r\n      };\r\n\r\n    case types.successRemoveWorkout:\r\n      const deletedWorkoutId = action.payload;\r\n      return {\r\n        ...state,\r\n        myWorkouts: [\r\n          ...state.myWorkouts.filter((w) => w.id !== deletedWorkoutId),\r\n        ],\r\n      };\r\n    case types.failureAction:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n\r\n    case types.setLoading:\r\n      return {\r\n        ...state,\r\n        loading: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n  isLogged: false,\r\n  user: {},\r\n  checking: true,\r\n};\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.successLogin:\r\n      return {\r\n        ...state,\r\n        isLogged: true,\r\n        user: action.payload,\r\n        checking: false,\r\n      };\r\n\r\n    case types.finishRenewToken:\r\n      return {\r\n        ...state,\r\n        checking: false,\r\n      };\r\n\r\n    case types.clearUser:\r\n      return { ...initialState, checking: false };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { muscleReducer } from \"./muscleReducer\";\r\nimport { exerciseReducer } from \"./exerciseReducer\";\r\nimport { userReducer } from \"./userReducer\";\r\nimport { snackbarReducer } from \"./snackbarReducer\";\r\nimport { modalReducer } from \"./modalReducer\";\r\nimport { workoutReducer } from \"./workoutReducer\";\r\nimport { authReducer } from \"./authReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  muscles: muscleReducer,\r\n  exercises: exerciseReducer,\r\n  user: userReducer,\r\n  snackbar: snackbarReducer,\r\n  modal: modalReducer,\r\n  workouts: workoutReducer,\r\n});\r\n","import { applyMiddleware, compose, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"./reducers/rootReducer\";\r\n\r\nconst composeEnhancers =\r\n  (typeof window !== \"undefined\" &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\r\n  compose;\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n","import React from \"react\";\r\n\r\nimport { CustomSnackbar } from \"./components/ui/Snackbar\";\r\nimport { AppRouter } from \"./routers/AppRouter\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./store\";\r\nimport { CssBaseline, ThemeProvider, createTheme } from \"@mui/material\";\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: { main: \"#27C265\", contrastText: \"#fff\" },\r\n    // secondary: { main: \"#FF9525\", contrastText: \"#fff\" },\r\n    secondary: { main: \"#109EB4\", contrastText: \"#fff\" },\r\n  },\r\n});\r\n\r\nexport const WorkoutsApp = () => {\r\n  // console.log(\"Render <WorkoutsApp />\");\r\n  return (\r\n    <Provider store={store}>\r\n      <ThemeProvider theme={theme}>\r\n        <CssBaseline />\r\n        <CustomSnackbar />\r\n        <AppRouter />\r\n      </ThemeProvider>\r\n    </Provider>\r\n  );\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { WorkoutsApp } from \"./WorkoutsApp\";\n\nimport \"./styles/styles.scss\";\nReactDOM.render(<WorkoutsApp />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}